{"version":3,"sources":["components/styles/About.module.css","components/styles/ButtonDrawer.module.css","components/styles/ContactCard.module.css","components/styles/TechSelect.module.css","components/styles/NavBar.module.css","components/About.js","contexts/MediaContext.js","components/ProjectCard.js","components/ToolTip.js","components/TechSelect.js","components/ButtonDrawer.js","components/Portfolio.js","components/ContactCard.js","components/Contact.js","components/NavBar.js","App.js","serviceWorker.js","index.js","components/styles/ProjectCard.module.css"],"names":["module","exports","About","className","styles","mainContentArea","id","this","props","mobileSize","aboutTextContainerMobile","aboutTextContainer","introHeader","introText","profilePicContainer","src","profilePic","alt","React","Component","useMedia","query","useState","window","matchMedia","matches","setMatches","useEffect","media","listener","addListener","removeListener","MediaContext","createContext","MediaContextProvider","cantHover","smBreakPoint","Provider","value","children","ProjectCard","mouseOver","setMouseOver","buttonsActive","setButtonsActive","mouseOnComponent","highlight","mouseOffComponent","Consumer","context","width","card_container_hover","card_container","onMouseEnter","onMouseLeave","portfolio_item","portfolio_item_grey","href","repoLink","target","portfolio_item_img","portfolio_item_img_grey","process","imageName","title","displayTitle","projectTitle","projectTitleGrey","titleInnerMobile","titleInner","toUpperCase","slice","portfolio_item_hover","style","visibility","padding","overflow","fontSize","deployLink","rel","summary","buttonContainer","defaultProps","ToolTip","show","setShow","suppressToolTip","flex","display","subModal","onClick","Modal","onHide","aria-labelledby","dialogClassName","centered","Header","closeButton","Body","content","activationType","responsive","flip","offset","marginLeft","TechSelect","showTooltip","setShowTooltip","toolTipShow","toolTipHide","toggleTech","name","techLogoContainers","selectedHighlight","caseSensitiveName","techLogos","imgGrey","image","ButtonDrawer","allowOverflow","setAllowOverflow","mediaState","useContext","open","toolTipTimer","setTimeout","clearTimeout","containingDiv","hr","box","plusButton","toggle","transform","plusIcon","iBackground","height","Portfolio","state","selectedTechs","drawerOpen","tech","updatedTechList","includes","filter","item","setState","hasSelectedTechs","stack","length","i","isSelectedTech","toggleDawer","Techs","map","key","suppressTooltip","paddingTop","paddingBottom","projects","project","techStack","ContactCard","linkToRepo","customClickAction","portfolio_item_link","link","Contact","showEmailPopup","togglePopup","copyEmail","copyText","document","getElementById","select","setSelectionRange","execCommand","emailTooltipInner","tabIndex","readOnly","NavBar","setOpen","setOverflow","onscroll","e","keyCode","addEventListener","once","onScroll","animateOpen","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed5c4383.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContentArea\":\"About_mainContentArea__1NjwG\",\"aboutTextContainer\":\"About_aboutTextContainer__1H34S\",\"aboutTextContainerMobile\":\"About_aboutTextContainerMobile__3PsMU\",\"introHeader\":\"About_introHeader__1cyH3\",\"introText\":\"About_introText__2_3rX\",\"profilePicContainer\":\"About_profilePicContainer__LrWr9\",\"profilePic\":\"About_profilePic__1nfEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containingDiv\":\"ButtonDrawer_containingDiv__3hS_z\",\"hr\":\"ButtonDrawer_hr__2CKPg\",\"plusButton\":\"ButtonDrawer_plusButton__37tZP\",\"plusIcon\":\"ButtonDrawer_plusIcon__1afU2\",\"iBackground\":\"ButtonDrawer_iBackground__1_b14\",\"buttonContainer\":\"ButtonDrawer_buttonContainer__M6z-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio_item\":\"ContactCard_portfolio_item__Foded\",\"portfolio_item_img\":\"ContactCard_portfolio_item_img__1w9Pj\",\"portfolio_item_link\":\"ContactCard_portfolio_item_link__2vqyO\",\"card_container\":\"ContactCard_card_container__2kxB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgGrey\":\"TechSelect_imgGrey__292VT\",\"selectedHighlight\":\"TechSelect_selectedHighlight__Ve0hi\",\"techLogoContainers\":\"TechSelect_techLogoContainers__L9e3Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animateOpen\":\"NavBar_animateOpen__2ycu1\"};","import React from \"react\";\nimport styles from \"./styles/About.module.css\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className={` ${styles.mainContentArea} container`} id=\"aboutSection\">\n        <div className=\"row justify-content-around\">\n          {/* Column containing text (with media query) */}\n          <div\n            className={`${\n              this.props.mobileSize\n                ? styles.aboutTextContainerMobile\n                : styles.aboutTextContainer\n            } col-12 col-md-8`}\n          >\n            {/* Header and paragraph tag must be enclosed or flexbox will put them side-by-side when centering */}\n            <div>\n              <div className={styles.introHeader}>Hi, I'm Dan!</div>\n              <p className={styles.introText}>\n                Web Developer with a background in the arts and theatre\n                technology\n              </p>\n            </div>\n          </div>\n\n          {/* Column containing profile picture */}\n          <div className={` ${styles.profilePicContainer} col-12 col-md-4`}>\n            <figure>\n              <img\n                src={process.env.PUBLIC_URL + \"/misc_images/danielgoldphoto.jpg\"}\n                className={`${styles.profilePic} img-fluid my-3`}\n                alt=\"Daniel Gold\"\n              />\n            </figure>\n          </div>\n          {/* End image column*/}\n        </div>\n        {/* End row */}\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { useEffect, useState, createContext } from \"react\";\n\nfunction useMedia(query) {\n  // Set state hook to track query match status (boolean)\n  let [matches, setMatches] = useState(window.matchMedia(query).matches);\n\n  // Create effect hook to set value for state we just set up\n  useEffect(\n    () => {\n      let media = window.matchMedia(query);\n\n      // Update state only when a change is detected\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n\n      // Set up listener for changes in query match status\n      let listener = () => setMatches(media.matches);\n      media.addListener(listener);\n\n      // Return teardown function for listener\n      return () => media.removeListener(listener);\n    },\n\n    // Do not run this effect if the following value was not changed on update\n    [query, matches]\n  );\n\n  return matches;\n}\n\nexport const MediaContext = createContext();\n\nfunction MediaContextProvider(props) {\n  let cantHover = useMedia(\"(hover:none)\"); // Return true if device is touch-screen only (no mouse pointer)\n  let smBreakPoint = useMedia(\"(max-width: 767px)\"); // 540px is the sm breakpoint, but 768px is where things go off the rails for this app.\n\n  return (\n    <MediaContext.Provider\n      value={{ cantHover: cantHover, smBreakPoint: smBreakPoint }}\n    >\n      {props.children}\n    </MediaContext.Provider>\n  );\n}\n\nexport default MediaContextProvider;\n","import React, { useState, useEffect } from \"react\";\nimport { MediaContext } from \"../contexts/MediaContext\";\nimport styles from \"./styles/ProjectCard.module.css\";\n\nfunction ProjectCard(props) {\n  // Props:\n  // width?: \"single\" or \"double\" - Makes the component 4 or 8 columns in medium view - Default = single\n  // imageName: file name of image to be displayed\n  // title: Name of project/title\n  // repoLink?: link to project repo\n  // deployLink?: link to deployed project\n  // highlight: number - 0: tech missing; 1: no techs selected; 2: has all selected techs\n  // summary: Short summary of the project\n  // displayTitle?: boolean - set to true if the title needs to be displayed as text (not alreayd in the image) - default true\n\n  // CONTEXT - This component consumes the MediaContext provider in order to be mobile responsive using the smBreakPoint property\n\n  const [mouseOver, setMouseOver] = useState(false); // Tracks mouse over entire component. Used for zoom/scale effect.\n  const [buttonsActive, setButtonsActive] = useState(false);\n\n  const mouseOnComponent = () => {\n    if (props.highlight) {\n      setMouseOver(true);\n    }\n  };\n\n  const mouseOffComponent = () => {\n    setMouseOver(false);\n  };\n\n  useEffect(() => {\n    if (mouseOver && !buttonsActive) {\n      setButtonsActive(true)\n    } else if (!mouseOver && buttonsActive) {\n      setButtonsActive(false);\n    }\n\n  }, [mouseOver, buttonsActive]);\n\n  return (\n    <MediaContext.Consumer>\n      {(context) => {\n        const { smBreakPoint } = context;\n        return (\n          // Container with sizing info for overall component. Has a handler for mouseover attached.\n          <div\n            className={`col-${props.width === \"double\" ? \"12\" : \"6\"} col-md-${\n              props.width === \"double\" ? \"6\" : \"4\"\n            } p-1 p-md-2 ${\n              mouseOver ? styles.card_container_hover : styles.card_container\n            }`}\n            onMouseEnter={mouseOnComponent}\n            onMouseLeave={mouseOffComponent}\n          >\n            {/* Begin portfolio Item inner container. This container handles styling for highlighted/grey */}\n            <div\n              className={\n                props.highlight\n                  ? styles.portfolio_item\n                  : styles.portfolio_item_grey\n              }\n              href={props.repoLink}\n              target=\"_blank\"\n            >\n              <img\n                className={`img-fluid ${\n                  props.highlight\n                    ? styles.portfolio_item_img\n                    : styles.portfolio_item_img_grey\n                }`}\n                src={`${process.env.PUBLIC_URL}/project_images/${props.imageName}`}\n                alt={props.title}\n              />\n              {/* Being project title container. Only appears if props.displayTitle is true */}\n              {props.displayTitle ? (\n                <div\n                  className={\n                    props.highlight\n                      ? styles.projectTitle\n                      : styles.projectTitleGrey\n                  }\n                >\n                  {/* Inner text container only exists to handle media query for font size */}\n                  <div\n                    className={\n                      smBreakPoint ? styles.titleInnerMobile : styles.titleInner\n                    }\n                  >\n                    {props.title[0].toUpperCase() + props.title.slice(1)}\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {/* Begin mouse-over detail overlay for project card */}\n              {mouseOver ? (\n                smBreakPoint ? (\n                  // BEGIN MOBILE ONLY VERSION OF DETAIL OVERALY\n                  // *********************************************************************\n                  <div\n                    className={styles.portfolio_item_hover}\n                    style={{\n                      visibility: mouseOver ? \"visible\" : \"hidden\",\n                      padding: \"1em\",\n                      overflow: \"auto\",\n                    }}\n                  >\n                    <h3 className=\"mb-sm-4 mb-xs-1\" style={{ fontSize: \"1em\" }}>\n                      {props.title[0].toUpperCase() + props.title.slice(1)}\n                    </h3>\n                    {/* Button container for deploy and repo links (MOBILE)*/}\n                    {buttonsActive ? (\n                      <div\n                        className={`row justify-content-around mb-xs-1 mb-sm-3`}\n                      >\n                        {props.deployLink ? (\n                          <a\n                            className={` col-5 btn btn-light btn-sm`}\n                            href={props.deployLink}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            Site\n                          </a>\n                        ) : (\n                          \"\"\n                        )}\n                        {props.repoLink ? (\n                          <a\n                            className={` col-5 btn btn-light btn-sm`}\n                            href={props.repoLink}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            Code\n                          </a>\n                        ) : (\n                          \"\"\n                        )}\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {/* End button container (MOBILE) */}\n                    <p>{props.summary}</p>\n                  </div>\n                ) : (\n                  // END MOBILE ONLY VERSION OF OVERLAY\n                  // ******************************************************************* \\\\\n                  // BEGIN NON-MOBILE VERSION OF OVERLAY\n                  <div\n                    className={styles.portfolio_item_hover}\n                    style={{\n                      visibility: mouseOver ? \"visible\" : \"hidden\",\n                    }}\n                  >\n                    <h3>\n                      {props.title[0].toUpperCase() + props.title.slice(1)}\n                    </h3>\n                    <p>{props.summary}</p>\n                    {/* Button container for deploy and repo links */}\n                    <div className={`${styles.buttonContainer}`}>\n                      {props.deployLink ? (\n                        <a\n                          className={`btn btn-light`}\n                          href={props.deployLink}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          View Website\n                        </a>\n                      ) : (\n                        \"\"\n                      )}\n                      {props.repoLink ? (\n                        <a\n                          className={`btn btn-light`}\n                          href={props.repoLink}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Source Code\n                        </a>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                    {/* End link button container */}\n                  </div>\n                  //* End mouseover detail overlay */\n                )\n              ) : (\n                \"\"\n              )}\n              {/* End mobile vs desktop conditional html */}\n            </div>\n            {/* End portfolio inner container */}\n          </div>\n        );\n      }}\n    </MediaContext.Consumer>\n  );\n}\n\nProjectCard.defaultProps = {\n  width: \"single\",\n  displayTitle: true,\n};\n\nexport default ProjectCard;\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nfunction ToolTip(props) {\n  /* \n    PROPS:\n        -suppressToolTip: boolean = if true, tooltip is never shown. If false, default behavior.\n        -content: any html = content for the tooltip itself. IE: was is displayed in the tooltip.\n        -showTooltip: boolean = True shows tooltip, false hides tooltip\n        -flex: boolean = True sets container as a flexbox (useful for vertically centering children)\n        -flip: boolean = If true, display tooltip above rather than below child component\n        -activationType: 'hover' | 'click' = conditions under which tooltip should appear\n        -responsive: boolean = false uses default sizing via pixels, true fits tooltip to content\n        -offset: number = use with responsive to center element since value will need to depend on tooltip size\n        -subModal: boolean = Set to true to activate component as modal instead of tooltip (ie: substitute modal for tooltip).\n    */\n\n  // Only used for modal mode, but can't be called conditionally, so will always be present.\n  const [show, setShow] = useState(false);\n\n  // If on mobile, use modal instead of tooltip\n  if (props.suppressToolTip) {\n    return (\n      <div style={props.flex ? { display: \"flex\" } : {}}>{props.children}</div>\n    );\n  }\n\n  if (props.subModal) {\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n      <>\n        <div onClick={handleShow}>{props.children}</div>\n        <Modal\n          show={show}\n          onHide={handleClose}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          dialogClassName=\"customModalSizing\"\n          centered\n        >\n          <Modal.Header closeButton>\n          </Modal.Header>\n          <Modal.Body>{props.content}</Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n\n  return (\n    <div\n      className={`tooltip ${\n        props.activationType === \"hover\"\n          ? \"tooltipHoverable\"\n          : props.activationType === \"click\"\n          ? \"tooltipClickable\"\n          : \"\"\n      } ${props.flex ? \"display-flex\" : \"\"}`}\n    >\n      {props.children}\n      <span\n        className={`\n        tooltiptext\n        ${props.responsive ? \"tooltiptextResponsive\" : \"\"}\n        ${props.flip ? \"tooltiptextTop\" : \"tooltiptextBottom\"}\n        `}\n        style={props.offset ? { marginLeft: props.offset } : {}}\n      >\n        {props.content}\n      </span>\n    </div>\n  );\n}\n\nexport default ToolTip;\n","import React, { useState } from \"react\";\nimport ToolTip from \"./ToolTip\";\nimport { MediaContext } from \"../contexts/MediaContext\";\nimport styles from \"./styles/TechSelect.module.css\";\n\nfunction TechSelect(props) {\n  /*\n  PROPS:\n    -name: string = short lowercase name of this technology\n    -caseSensitiveName: string = How the name of the technology should appear to the user\n    -highlight: 0 | 1 | 2 = For zero, image is made greyscale. 1 is normal appearance. 2 is normal with an underline (bottom border)\n    -image: string = file name with extention of image to be used (path to image - filename is already hardcoded)\n    -toggleTech: function = Function which shows or hides the tooltip when called.\n    -suppressTooltip: boolean = When true, tooltip will never appear\n  */\n\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const toolTipShow = () => {\n    setShowTooltip(true);\n  };\n  const toolTipHide = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    // Note: This has to be a div, not a button, since the default styling from pseudo classes for buttons, such as :active and :hover\n    // will interfer\n\n    <MediaContext.Consumer>\n      {(context) => {\n        const { cantHover } = context;\n        return (\n          // Begin main continer (basically a button)\n          <div\n            onMouseEnter={toolTipShow}\n            onMouseLeave={toolTipHide}\n            onClick={() => {\n              props.toggleTech(props.name);\n            }}\n            className={`${styles.techLogoContainers} col-2 col-md-1 btn btn-link\n      ${props.highlight === 2 ? styles.selectedHighlight : \"\"}\n      `}\n          >\n            <ToolTip\n              suppressToolTip={cantHover}\n              content={props.caseSensitiveName}\n              showTooltip={showTooltip}\n              flex={true}\n              activationType=\"hover\"\n            >\n              {/* Begin image */}\n              <img\n                alt={props.caseSensitiveName}\n                className={` img-fluid align-self-center ${styles.techLogos} ${\n                  props.highlight ? \"\" : styles.imgGrey\n                } `}\n                src={`${process.env.PUBLIC_URL}/techs/${props.image}`}\n              />\n              {/* End image */}\n            </ToolTip>\n          </div>\n          // End main container\n        );\n      }}\n    </MediaContext.Consumer>\n  );\n}\n\nexport default TechSelect;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport styles from \"./styles/ButtonDrawer.module.css\";\nimport { MediaContext } from \"../contexts/MediaContext\";\n\nfunction ButtonDrawer(props) {\n  // Props:\n  // >>toggle: function - from parent that toggles drawer. No agruments.\n  // >>open: boolean - is drawer currently open.\n\n  const [allowOverflow, setAllowOverflow] = useState(false);\n  const mediaState = useContext(MediaContext);\n\n  // In order to achieve a slide-out animated effect, overflow must be hidden while opening and closing (and while closed)\n  // however, overflow must be allowed while fully open to allow tooltips to be displayed properly.\n  // This effect, together with the allowOverFlow state allow overflow to be shown only when the drawer is fully open.\n\n  useEffect(() => {\n    // If component gets set to open after having been closed, allow overflow after animation finished (2 seconds)\n    if (props.open) {\n      const allowOverflowTrue = () => {\n        setAllowOverflow(true);\n      };\n      const toolTipTimer = setTimeout(allowOverflowTrue, 2000);\n\n      return () => {\n        clearTimeout(toolTipTimer);\n      };\n    }\n    //  If component gets closed after being open, imediately set overflow to false.\n    else {\n      setAllowOverflow(false);\n    }\n  }, [props.open, allowOverflow]);\n\n  return (\n    <>\n      <div className={styles.containingDiv}>\n        <hr className={styles.hr} />\n        <h6 className={styles.box}>Filter</h6>\n        <button\n          className={`${styles.plusButton} btn btn-link `}\n          onClick={props.toggle}\n          style={{\n            transform: `${\n              props.open ? \"rotate(45deg) translateX(1.9%)\" : \"rotate(0deg)\"\n            }`,\n          }}\n        >\n          <i className={` ${styles.plusIcon} fas fa-plus-circle`}></i>\n          <div className={styles.iBackground}></div>\n        </button>\n      </div>\n      <div\n        className={`${styles.buttonContainer} container`}\n        style={{\n          height: `${props.open ? (mediaState.smBreakPoint ? \"36vh\" : \"18vh\") : \"0\"}`,\n          overflow: `${allowOverflow && props.open ? \"visible\" : \"hidden\"}`,\n        }}\n      >\n        {props.children}\n      </div>\n    </>\n  );\n}\n\nexport default ButtonDrawer;\n","import React from \"react\";\nimport ProjectCard from \"./ProjectCard\";\nimport projects from \"../assets/projects.json\";\nimport TechSelect from \"./TechSelect\";\nimport Techs from \"../assets/techs.json\";\nimport ButtonDrawer from \"./ButtonDrawer\";\nimport { MediaContext } from \"../contexts/MediaContext\";\n\nclass Portfolio extends React.Component {\n  state = {\n    selectedTechs: [],\n    drawerOpen: false,\n  };\n\n  toggleTech = (tech) => {\n    // If tech is 'reset' blank out tech list\n    if (tech === \"reset\") {\n      this.setState({ selectedTechs: [] });\n      return;\n    }\n\n    // Adds or removes the tech (string) from the selectedTechs array in the state\n    let updatedTechList;\n    if (this.state.selectedTechs.includes(tech)) {\n      updatedTechList = this.state.selectedTechs.filter(\n        (item) => item !== tech\n      );\n    } else {\n      updatedTechList = [tech, ...this.state.selectedTechs];\n    }\n\n    this.setState({ selectedTechs: updatedTechList });\n  };\n\n  hasSelectedTechs = (stack) => {\n    // If no techs are selected, alwasy return truthy number 1\n    // If card has all selected techs, return truthy number 2\n    // If card is missing one or more selected techs, return falsy number 0\n    if (this.state.selectedTechs.length === 0) {\n      return 1;\n    }\n\n    for (let i = 0; i < this.state.selectedTechs.length; i++) {\n      if (!stack.includes(this.state.selectedTechs[i])) {\n        return 0;\n      }\n    }\n\n    return 2;\n  };\n\n  isSelectedTech = (tech) => {\n    if (this.state.selectedTechs.length === 0) {\n      return 1;\n    }\n\n    if (this.state.selectedTechs.includes(tech)) {\n      return 2;\n    }\n\n    return 0;\n  };\n\n  toggleDawer = () => {\n    // For tech drawer (ButtonDrawer) open/close\n    // If closing drawer, also reset techs\n    if (this.state.drawerOpen) {\n      this.toggleTech(\"reset\");\n    }\n    this.setState({ drawerOpen: !this.state.drawerOpen });\n  };\n\n  render() {\n    return (\n      <MediaContext.Consumer>\n        {(context) => {\n          const { cantHover, smBreakPoint } = context;\n          return (\n            <div className=\"container\" id=\"portfolioSection\">\n              <div className=\"row\">\n                <div className=\"col-12 portfolioHOne\">\n                  <h1>Portfolio</h1>\n                </div>\n              </div>\n              <ButtonDrawer\n                open={this.state.drawerOpen}\n                toggle={this.toggleDawer}\n              >\n                <div className=\"row justify-content-center\">\n                  {Techs.map((tech, i) => {\n                    return (\n                      <TechSelect\n                        key={i}\n                        name={tech.name}\n                        image={tech.image}\n                        caseSensitiveName={tech.caseSensitiveName}\n                        toggleTech={this.toggleTech}\n                        highlight={this.isSelectedTech(tech.name)}\n                        suppressTooltip={cantHover}\n                      />\n                    );\n                  })}\n                  <div\n                    style={{ paddingTop: \"6vh\", paddingBottom: \"6vh\" }}\n                    className=\"col-2 col-md-1 btn btn-link\"\n                    onClick={() => this.toggleTech(\"reset\")}\n                  >\n                    Reset\n                  </div>\n                </div>\n              </ButtonDrawer>\n              <div className=\"row\">\n                {projects.map((project, i) => {\n                  return (\n                    <ProjectCard\n                      key={i}\n                      width={project.width}\n                      imageName={project.imageName}\n                      title={project.title}\n                      repoLink={project.repoLink}\n                      deployLink={project.deployLink}\n                      highlight={this.hasSelectedTechs(project.techStack)}\n                      mobileSize={smBreakPoint}\n                      summary={project.summary}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          );\n        }}\n      </MediaContext.Consumer>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React from \"react\";\nimport styles from \"./styles/ContactCard.module.css\";\n\nclass ContactCard extends React.Component {\n  // Props:\n  // imageName: file name of image to be displayed\n  // title: Alt Text\n  // link: link to social site or file\n  // customClickAction: Icon is rendered as a button instead and uses the supplied function as its onclick\n\n  linkToRepo = () => {\n    window.open(this.props.repoLink);\n  };\n\n  render() {\n    return (\n      <div className={`${styles.card_container}`}>\n        <div\n          className={styles.portfolio_item}\n          href={this.props.repoLink}\n          target=\"_blank\"\n        >\n          {this.props.customClickAction ? (\n            <button\n              onClick={this.props.customClickAction}\n              className={`${styles.portfolio_item_link} btn btn-link`}\n            >\n              <img\n                className={`img-fluid ${styles.portfolio_item_img}`}\n                src={`${process.env.PUBLIC_URL}/social_images/${this.props.imageName}`}\n                alt={this.props.title}\n              />\n            </button>\n          ) : (\n            <a\n              href={this.props.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={styles.portfolio_item_link}\n            >\n              <img\n                className={`img-fluid ${styles.portfolio_item_img}`}\n                src={`${process.env.PUBLIC_URL}/social_images/${this.props.imageName}`}\n                alt={this.props.title}\n              />\n            </a>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactCard;\n","import React from \"react\";\nimport ToolTip from \"./ToolTip\";\nimport ContactCard from \"./ContactCard\";\nimport { MediaContext } from \"../contexts/MediaContext\";\n\nclass Contact extends React.Component {\n  state = { showEmailPopup: false };\n\n  togglePopup = () => {\n    this.setState({ showEmailPopup: !this.state.showEmailPopup });\n  };\n\n  copyEmail = () => {\n    // Get the text field\n    const copyText = document.getElementById(\"vanillaTextarea\");\n\n    // Select the text field\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n    // Copy the text inside the text field\n    document.execCommand(\"copy\");\n  };\n\n  emailTooltipInner = () => {\n    return (\n      <div className=\"container p-2\" tabIndex=\"-1\">\n        <div className=\"row\">\n          <textarea\n            id=\"vanillaTextarea\"\n            className=\"col-12 text-center\"\n            value=\"DanielJasonGold@gmail.com\"\n            readOnly\n          />\n        </div>\n        <div className=\"row\">\n          <button\n            className=\"btn btn-sm btn-light mx-auto\"\n            onClick={this.copyEmail}\n          >\n            Copy\n          </button>\n          <a\n            className=\"btn btn-sm btn-light mx-auto\"\n            href=\"mailto:DanielJasonGold@gmail.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Compose\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <MediaContext.Consumer>\n        {(context) => {\n          const { smBreakPoint } = context;\n          return (\n            <div className=\"container\" id=\"contactSection\">\n              <div className=\"row\">\n                <div className=\"col-12 mt-5\">\n                  <h1>Contact</h1>\n                  <hr className=\"sectionBreak\" />\n                </div>\n              </div>\n              <div className=\"row \">\n                <div className=\"col-6 col-md-3 p-1 p-md-2\">\n                  <ContactCard\n                    imageName=\"twitter.svg\"\n                    title=\"Daniel Gold on Twitter\"\n                    link=\"https://twitter.com/DanGoldLandGod\"\n                  />\n                </div>\n                <div className=\"col-6 col-md-3 p-1 p-md-2\">\n                  <ContactCard\n                    imageName=\"linkedin.svg\"\n                    title=\"Daniel Gold on LinkedIn\"\n                    link=\"https://www.linkedin.com/in/danjasongold/\"\n                  />\n                </div>\n                <div className=\"col-6 col-md-3 p-1 p-md-2\">\n                  <ContactCard\n                    imageName=\"github.svg\"\n                    title=\"LandGod on GitHub\"\n                    link=\"https://www.github.com/landgod\"\n                  />\n                </div>\n                <div className=\"col-6 col-md-3 p-1 p-md-2\">\n                  <ToolTip\n                    content={this.emailTooltipInner()}\n                    showTooltip={this.state.showEmailPopup}\n                    flip={true}\n                    activationType=\"click\"\n                    responsive=\"true\"\n                    offset=\"-115px\"\n                    subModal={smBreakPoint ? true : false}\n                  >\n                    <ContactCard\n                      imageName=\"email.svg\"\n                      title=\"DanielJasonGold@gmail.com\"\n                      customClickAction={this.togglePopup}\n                    />\n                  </ToolTip>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </MediaContext.Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./styles/NavBar.module.css\";\n\nfunction NavBar() {\n  const [open, setOpen] = useState(false);\n  const [overflow, setOverflow] = useState(false);\n\n  useEffect(() => {\n    // Trigger reveal navbar (via making height not 0) as soon as user scrolls page.\n    // Should never do anything after that inital scroll\n    let onScroll;\n\n    if (!open) {\n      onscroll = (e) => {\n        // Check for [tab] press\n        if (e.keyCode) {\n          if (e.keyCode !== 9) {\n            return;\n          }\n        }\n        // Reveal navbar\n        setOpen(true);\n        // After reveal is finished, allow overflow permanently so that hamburger menue works\n        setTimeout(() => setOverflow(true), 2000);\n      };\n\n      window.addEventListener(\"scroll\", onscroll, { once: \"true\" });\n      window.addEventListener(\"keyup\", onscroll, { once: \"true\" });\n    }\n    return () => {\n      if (onScroll) {\n        window.removeEventListener(\"scroll\", onscroll);\n        window.removeEventListener(\"keyup\", onscroll);\n      }\n    };\n  });\n\n  return (\n    <div\n      className={styles.animateOpen}\n      style={{\n        height: open ? \"54px\" : \"0px\",\n        overflow: overflow ? \"visible\" : \"hidden\",\n      }}\n    >\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light justify-content-between\">\n        <a className=\"navbar-brand\" href=\"#aboutSection\">\n          Dan Gold\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          className=\"collapse navbar-collapse justify-content-end\"\n          id=\"navbarNav\"\n        >\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#portfolioSection\">\n                Portfolio\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#contactSection\">\n                Contact\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                href={`${process.env.PUBLIC_URL}/DanielGold.pdf`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Resume\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport About from \"./components/About\";\nimport Portfolio from \"./components/Portfolio\";\nimport Contact from \"./components/Contact\";\nimport NavBar from \"./components/NavBar\";\nimport MediaContextProvider from \"./contexts/MediaContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <MediaContextProvider>\n        <About/>\n        <Portfolio/>\n        <Contact />\n      </MediaContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio_item\":\"ProjectCard_portfolio_item__3Ri8p\",\"portfolio_item_grey\":\"ProjectCard_portfolio_item_grey__j9AMh\",\"portfolio_item_img\":\"ProjectCard_portfolio_item_img__2um3N\",\"portfolio_item_img_grey\":\"ProjectCard_portfolio_item_img_grey__2YvhX\",\"portfolio_item_hover\":\"ProjectCard_portfolio_item_hover__3hJKC\",\"buttonContainer\":\"ProjectCard_buttonContainer__3vrrl\",\"projectTitle\":\"ProjectCard_projectTitle__2veAz\",\"projectTitleGrey\":\"ProjectCard_projectTitleGrey__1xKh9\",\"titleInner\":\"ProjectCard_titleInner__13jew\",\"titleInnerMobile\":\"ProjectCard_titleInnerMobile__Z-qK5\",\"card_container\":\"ProjectCard_card_container__3eevM\"};"],"sourceRoot":""}