{"version":3,"sources":["components/styles/ProjectCard.module.css","components/styles/TechSelect.module.css","components/styles/ButtonDrawer.module.css","components/styles/IconBar.module.css","components/styles/ContactCard.module.css","components/styles/TextBaloon.module.css","components/IconBar.js","components/TextBaloon.js","components/About.js","components/ProjectCard.js","components/TechSelect.js","components/ButtonDrawer.js","components/Portfolio.js","components/ContactCard.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IconBar","className","style","styles","iconBarIcons","iconSpan","iconBarBar","React","Component","TextBaloon","baloonMain","href","process","target","rel","About","src","alt","ProjectCard","state","width","props","imageName","mouseOver","mouseOnComponent","highlight","setState","mouseOffComponent","linkToRepo","window","open","repoLink","this","card_container_hover","card_container","onMouseEnter","onMouseLeave","portfolio_item","portfolio_item_grey","portfolio_item_img","portfolio_item_img_grey","title","title_overlay","toUpperCase","slice","deployLink","repo_overlay","repo_overlay_grey","repo_overlay_a","TechSelect","useState","showTooltip","setShowTooltip","onClick","toggleTech","name","techLogoContainers","selectedHighlight","caseSensitiveName","techLogos","imgGrey","image","suppressTooltip","tooltip","tooltipHidden","tooltipAfter","ButtonDrawer","containingDiv","hr","box","plusButton","toggle","transform","plusIcon","iBackground","spacer","height","buttonContainer","mobileSize","children","Portfolio","selectedTechs","drawerOpen","tech","updatedTechList","includes","filter","item","hasSelectedTechs","stack","length","i","isSelectedTech","toggleDawer","Techs","map","key","noHover","paddingTop","paddingBottom","projects","project","techStack","ContactCard","link","portfolio_item_link","Contact","useMedia","query","matchMedia","matches","setMatches","useEffect","media","listener","addListener","removeListener","App","cantHover","smBreakPoint","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e36cb8bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio_item\":\"ProjectCard_portfolio_item__3Ri8p\",\"portfolio_item_grey\":\"ProjectCard_portfolio_item_grey__j9AMh\",\"portfolio_item_img\":\"ProjectCard_portfolio_item_img__2um3N\",\"portfolio_item_img_grey\":\"ProjectCard_portfolio_item_img_grey__2YvhX\",\"repo_overlay\":\"ProjectCard_repo_overlay__24Pf4\",\"repo_overlay_grey\":\"ProjectCard_repo_overlay_grey__1Z9_7\",\"repo_overlay_a\":\"ProjectCard_repo_overlay_a__1L-8Y\",\"title_overlay\":\"ProjectCard_title_overlay__AkVHa\",\"card_container\":\"ProjectCard_card_container__3eevM\",\"card_container_hover\":\"ProjectCard_card_container_hover__3VRyK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techLogos\":\"TechSelect_techLogos__3pxF-\",\"imgGrey\":\"TechSelect_imgGrey__292VT\",\"selectedHighlight\":\"TechSelect_selectedHighlight__Ve0hi\",\"techLogoContainers\":\"TechSelect_techLogoContainers__L9e3Q\",\"tooltip\":\"TechSelect_tooltip__37l0H\",\"tooltipHidden\":\"TechSelect_tooltipHidden__37xXk\",\"tooltipAfter\":\"TechSelect_tooltipAfter__33KfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containingDiv\":\"ButtonDrawer_containingDiv__3hS_z\",\"hr\":\"ButtonDrawer_hr__2CKPg\",\"box\":\"ButtonDrawer_box__3a97N\",\"plusButton\":\"ButtonDrawer_plusButton__37tZP\",\"plusIcon\":\"ButtonDrawer_plusIcon__1afU2\",\"iBackground\":\"ButtonDrawer_iBackground__1_b14\",\"buttonContainer\":\"ButtonDrawer_buttonContainer__M6z-u\",\"spacer\":\"ButtonDrawer_spacer__ty9HA\",\"spacerOpen\":\"ButtonDrawer_spacerOpen__1kMEN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconBarBar\":\"IconBar_iconBarBar__19rju\",\"iconBarIcons\":\"IconBar_iconBarIcons__3--ib\",\"iconSpan\":\"IconBar_iconSpan__3TybL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio_item\":\"ContactCard_portfolio_item__Foded\",\"portfolio_item_img\":\"ContactCard_portfolio_item_img__1w9Pj\",\"portfolio_item_link\":\"ContactCard_portfolio_item_link__2vqyO\",\"card_container\":\"ContactCard_card_container__2kxB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baloonMain\":\"TextBaloon_baloonMain__1b6bZ\"};","import React from \"react\";\nimport styles from \"./styles/IconBar.module.css\";\n\nclass IconBar extends React.Component {\n  render() {\n    return (\n      <div className=\"container\" style={styles}>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"row\">\n              <div className={styles.iconBarIcons}>\n                <span className={`${styles.iconSpan} col-2`}>\n                  <i className=\"fas fa-laptop\"></i>\n                </span>\n                <span className={`${styles.iconSpan} col-2`}>\n                  <i className=\"fas fa-tablet-alt\"></i>\n                </span>\n                <span className={`${styles.iconSpan} col-2`}>\n                  <i className=\"fas fa-mobile\"></i>\n                </span>\n              </div>\n              <div className={`${styles.iconBarBar} col-12`}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconBar;\n","import React from \"react\";\nimport styles from \"./styles/TextBaloon.module.css\";\n\nclass TextBaloon extends React.Component {\n  render() {\n    return (\n      <div className={`${styles.baloonMain} container`}>\n        <div className=\"row pt-3\">\n          <div className=\"col-12 text-left\">\n            <h5>Summary</h5>\n            <p>\n              Web Developer with a background in the arts and theatre\n              technology. Educated at the University of Washington Coding\n              Bootcamp with skills in HTML, CSS, JavaScript, and Python.\n              Detail-oriented problem solver with a passion for iterating new\n              features to create better user experiences. Strengths in\n              creativity, teamwork, and quick learning. Equally at home with\n              front-end and back-end projects, and works well with others.\n            </p>\n            <h5>Skills</h5>\n            <p>\n              React, JavaScript, Node.js, Python, HTML, CSS, Express,\n              Handlebars, mySQL, MongoDB, REST APIs\n            </p>\n            <h5>Additional Skills</h5>\n            <p>Management, MS Office</p>\n            <a\n              href={`${process.env.PUBLIC_URL}/DanielGold.pdf`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"btn btn-outline-danger btn-sm mb-2\"\n            >\n              <h6>Full Resume</h6>\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextBaloon;\n","import React from \"react\";\nimport IconBar from \"./IconBar\";\nimport TextBaloon from \"./TextBaloon\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-end\">\n          <div className=\"col-12 col-md-4 mainContentArea\">\n            <figure className=\"profilePic\">\n              <img\n                src={process.env.PUBLIC_URL + \"/danielgoldphoto.jpg\"}\n                className=\"img-fluid my-3\"\n                alt=\"Daniel Gold\"\n              />\n            </figure>\n            <div className=\"overlapContainer\">\n              <h1 className=\"aboutHOne\" >About</h1>\n              <div className=\"textBaloonComponent mt-md-5\">\n                <TextBaloon />\n              </div>\n              <div className=\"iconBarComponent\">\n                <IconBar />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport styles from \"./styles/ProjectCard.module.css\";\n\nclass ProjectCard extends React.Component {\n  // Props:\n  // width: \"single\" or \"double\" - Makes the component 4 or 8 columns in medium view\n  // imageName: file name of image to be displayed\n  // title: Name of project/title\n  // repoLink: link to project repo\n  // deployLink: link to deployed project\n  // highlight: number - 0: tech missing; 1: no techs selected; 2: has all selected techs\n\n  state = {\n    width: this.props.width || \"single\", // single or double (4 col / 8 col)\n    imageName: this.props.imageName, // Probably not needed any more\n    mouseOver: false // Tracks mouse over entire component. Used for zoom/scale effect.\n  };\n\n  mouseOnComponent = () => {\n    if (this.props.highlight) {\n      this.setState({ mouseOver: true });\n    }\n  };\n\n  mouseOffComponent = () => {\n    this.setState({ mouseOver: false });\n  };\n\n  linkToRepo = () => {\n    window.open(this.props.repoLink);\n  };\n\n  render() {\n    return (\n      // Container with sizing info for overall component. Is transformed during mouseover\n      <div\n        className={`col-${this.state.width === \"double\" ? \"12\" : \"6\"} col-md-${\n          this.state.width === \"double\" ? \"6\" : \"4\"\n        } p-1 p-md-2 ${\n          this.state.mouseOver\n            ? styles.card_container_hover\n            : styles.card_container\n        }`}\n        onMouseEnter={this.mouseOnComponent}\n        onMouseLeave={this.mouseOffComponent}\n      >\n        {/* Link to repo encapsulated entire component except deploy link */}\n        <a href={this.props.repoLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <div\n            className={\n              this.props.highlight\n                ? styles.portfolio_item\n                : styles.portfolio_item_grey\n            }\n            href={this.props.repoLink}\n            target=\"_blank\"\n          >\n            <img\n              className={`img-fluid ${\n                this.props.highlight\n                  ? styles.portfolio_item_img\n                  : styles.portfolio_item_img_grey\n              }`}\n              src={`${process.env.PUBLIC_URL}/${this.state.imageName}`}\n              alt={this.props.title}\n            />\n          </div>\n          <div\n            className={styles.title_overlay}\n            href={this.props.repoLink}\n            target=\"_blank\"\n          >\n            {this.props.title[0].toUpperCase() + this.props.title.slice(1)}\n          </div>\n        </a>\n\n        {/* Add deploy link flag in upper corner if deploy link was supplied to component (or blank)*/}\n        {this.props.deployLink ? (\n          <div\n            className={\n              this.props.highlight\n                ? styles.repo_overlay\n                : styles.repo_overlay_grey\n            }\n          >\n            <a\n              className={styles.repo_overlay_a}\n              href={this.props.deployLink}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Deployed\n            </a>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProjectCard;\n","import React, { useState } from \"react\";\nimport styles from \"./styles/TechSelect.module.css\";\n\nfunction TechSelect(props) {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const toolTipShow = () => {\n    setShowTooltip(true);\n  };\n  const toolTipHide = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    // Note: This has to be a div, not a button, since the default styling from pseudo classes for buttons, such as :active and :hover\n    // will interfer\n\n    // Begin main continer (basically a button)\n    <div\n      onMouseEnter={toolTipShow}\n      onMouseLeave={toolTipHide}\n      onClick={() => {\n        props.toggleTech(props.name);\n      }}\n      className={`${styles.techLogoContainers} col-2 col-md-1 btn btn-link \n      ${props.highlight === 2 ? styles.selectedHighlight : \"\"}\n      `}\n    >\n      {/* Begin image */}\n      <img\n        alt={props.caseSensitiveName}\n        className={`img-fluid ${styles.techLogos} ${\n          props.highlight ? \"\" : styles.imgGrey\n        } `}\n        src={`${process.env.PUBLIC_URL}/techs/${props.image}`}\n      />\n      {/* End image */}\n\n      {/* Begin tooltip */}\n      {/* Logic to stop render of anything to do with the tooltip on devices that don't have hover capability */}\n      {props.suppressTooltip ? (\n        \"\"\n      ) : (\n        <>\n          <div\n            className={`${styles.tooltip} ${\n              showTooltip ? \"\" : styles.tooltipHidden\n            }`}\n          >\n            {props.caseSensitiveName}\n          </div>\n          <div\n            className={`${styles.tooltipAfter} ${\n              showTooltip ? \"\" : styles.tooltipHidden\n            }`}\n          ></div>\n        </>\n      )}\n      {/* End tooltip */}\n    </div>\n    // End main container\n  );\n}\n\nexport default TechSelect;\n","import React from \"react\";\nimport styles from \"./styles/ButtonDrawer.module.css\";\n\nfunction ButtonDrawer(props) {\n\n  // Props:\n  // >>toggle: function - from parent that toggles drawer. No agruments.\n  // >>open: boolean - is drawer currently open.\n\n  return (\n    <>\n      <div className={styles.containingDiv}>\n        <hr className={styles.hr} />\n        <div className={styles.box}>Filter</div>\n        <button\n          className={`${styles.plusButton} btn btn-link `}\n          onClick={props.toggle}\n          style={{transform:`${ props.open ? \"rotate(45deg) translateX(1.9%)\" : \"rotate(0deg)\"}`}}\n        >\n          <i className={` ${styles.plusIcon} fas fa-plus-circle`}></i>\n          <div className={styles.iBackground}></div>\n        </button>\n        <div className={styles.spacer} style={{height:`${props.open ? \"5vh\" : \"15vh\"}`}}> </div>\n      </div>\n        <div className={`${styles.buttonContainer} container`} style={{height:`${props.open ? props.mobileSize ? \"36vh\" : \"18vh\" : \"0\"}`}}>\n          {props.children}\n        </div>\n    </>\n  );\n}\n\nexport default ButtonDrawer;\n","import React from \"react\";\nimport ProjectCard from \"./ProjectCard\";\nimport projects from \"../assets/projects.json\";\nimport TechSelect from \"./TechSelect\";\nimport Techs from \"../assets/techs.json\";\nimport ButtonDrawer from \"./ButtonDrawer\";\n\nclass Portfolio extends React.Component {\n  state = {\n    selectedTechs: [],\n    drawerOpen: false\n  };\n\n  toggleTech = tech => {\n    // If tech is 'reset' blank out tech list\n    if (tech === \"reset\") {\n      this.setState({ selectedTechs: [] });\n      return;\n    }\n\n    // Adds or removes the tech (string) from the selectedTechs array in the state\n    let updatedTechList;\n    if (this.state.selectedTechs.includes(tech)) {\n      updatedTechList = this.state.selectedTechs.filter(item => item !== tech);\n    } else {\n      updatedTechList = [tech, ...this.state.selectedTechs];\n    }\n\n    this.setState({ selectedTechs: updatedTechList });\n  };\n\n  hasSelectedTechs = stack => {\n    // If no techs are selected, alwasy return truthy number 1\n    // If card has all selected techs, return truthy number 2\n    // If card is missing one or more selected techs, return falsy number 0\n    if (this.state.selectedTechs.length === 0) {\n      return 1;\n    }\n\n    for (let i = 0; i < this.state.selectedTechs.length; i++) {\n      if (!stack.includes(this.state.selectedTechs[i])) {\n        return 0;\n      }\n    }\n\n    return 2;\n  };\n\n  isSelectedTech = tech => {\n    if (this.state.selectedTechs.length === 0) {\n      return 1;\n    }\n\n    if (this.state.selectedTechs.includes(tech)) {\n      return 2;\n    }\n\n    return 0;\n  };\n\n  toggleDawer = () => {\n    // For tech drawer (ButtonDrawer) open/close\n    // If closing drawer, also reset techs\n    if (this.state.drawerOpen) {\n      this.toggleTech(\"reset\");\n    }\n    this.setState({ drawerOpen: !this.state.drawerOpen });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 text-center portfolioHOne\">\n            <h1>Portfolio</h1>\n          </div>\n        </div>\n        <ButtonDrawer\n          open={this.state.drawerOpen}\n          toggle={this.toggleDawer}\n          mobileSize={this.props.mobileSize}\n        >\n          <div className=\"row justify-content-center\">\n            {Techs.map((tech, i) => {\n              return (\n                <TechSelect\n                  key={i}\n                  name={tech.name}\n                  image={tech.image}\n                  caseSensitiveName={tech.caseSensitiveName}\n                  toggleTech={this.toggleTech}\n                  highlight={this.isSelectedTech(tech.name)}\n                  suppressTooltip={this.props.noHover}\n                />\n              );\n            })}\n            <div\n              style={{ paddingTop: \"6vh\", paddingBottom: \"6vh\" }}\n              className=\"col-2 col-md-1 btn btn-link\"\n              onClick={() => this.toggleTech(\"reset\")}\n            >\n              Reset\n            </div>\n          </div>\n        </ButtonDrawer>\n        <div className=\"row\">\n          {projects.map((project, i) => {\n            return (\n              <ProjectCard\n                key={i}\n                width={project.width}\n                imageName={project.imageName}\n                title={project.title}\n                repoLink={project.repoLink}\n                deployLink={project.deployLink}\n                highlight={this.hasSelectedTechs(project.techStack)}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React from \"react\";\nimport styles from \"./styles/ContactCard.module.css\";\n\nclass ContactCard extends React.Component {\n  // Props:\n  // imageName: file name of image to be displayed\n  // title: Alt Text\n  // link: link to social site or file\n  //rounding: value for boarder radius\n\n  linkToRepo = () => {\n    window.open(this.props.repoLink);\n  };\n\n  render() {\n    return (\n      <div className={`col-6 col-md-4 p-1 p-md-2 ${styles.card_container}`}>\n        <div\n          className={styles.portfolio_item}\n          href={this.props.repoLink}\n          target=\"_blank\"\n        >\n          <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.portfolio_item_link}>\n            <img\n              className={`img-fluid ${styles.portfolio_item_img}`}\n              src={`${process.env.PUBLIC_URL}/${this.props.imageName}`}\n              alt={this.props.title}\n            />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactCard;\n","import React from \"react\";\nimport ContactCard from \"./ContactCard\";\n\nclass Contact extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 text-center\">\n            <h1 className=\"contactHOne\" >Contact</h1>\n          </div>\n        </div>\n        <div className=\"row \">\n          <ContactCard\n            imageName=\"linkedinlogo.png\"\n            title=\"Daniel Gold on LinkedIn\"\n            link=\"https://www.linkedin.com/in/danjasongold/\"\n          />\n          <ContactCard\n            imageName=\"githublogo.png\"\n            title=\"LandGod on GitHub\"\n            link=\"https://www.github.com/landgod\"\n          />\n          <ContactCard\n            imageName=\"gmail.svg\"\n            title=\"DanielJasonGold@gmail.com\"\n            link=\"mailto:DanielJasonGold@gmail.com\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Portfolio from \"./components/Portfolio\";\nimport Contact from \"./components/Contact\";\n\n// General prupose reuseable media queries\nfunction useMedia(query) {\n  // Set state hook to track query match status (boolean)\n  let [matches, setMatches] = useState(window.matchMedia(query).matches);\n\n  // Create effect hook to set value for state we just set up\n  useEffect(\n    () => {\n      let media = window.matchMedia(query);\n\n      // Update state only when a change is detected\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n\n      // Set up listener for changes in query match status\n      let listener = () => setMatches(media.matches);\n      media.addListener(listener);\n\n      // Return teardown function for listener\n      return () => media.removeListener(listener);\n    },\n\n    // Do not run this effect if the following value was not changed on update\n    [query, matches]\n  );\n\n  return matches;\n}\n\nfunction App() {\n\n  let cantHover = useMedia('(hover:none)');\n  let smBreakPoint = useMedia(\"(max-width: 767px)\") // 540px = max breakpoint for small in boostrap \n\n  return (\n    <div className=\"App\">\n      <About />\n      <Portfolio noHover={cantHover} mobileSize={smBreakPoint}/>\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}