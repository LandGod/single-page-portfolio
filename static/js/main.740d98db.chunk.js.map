{"version":3,"sources":["components/styles/ProjectCard.module.css","components/styles/TechSelect.module.css","components/styles/About.module.css","components/styles/ButtonDrawer.module.css","components/styles/ContactCard.module.css","components/styles/NavBar.module.css","components/About.js","components/ProjectCard.js","components/TechSelect.js","components/ButtonDrawer.js","components/Portfolio.js","components/ContactCard.js","components/Contact.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","styles","mainContentArea","id","this","props","mobileSize","aboutTextContainerMobile","aboutTextContainer","introHeader","introText","profilePicContainer","src","profilePic","alt","React","Component","ProjectCard","state","mouseOver","mouseOnComponent","highlight","setState","mouseOffComponent","width","card_container_hover","card_container","onMouseEnter","onMouseLeave","portfolio_item","portfolio_item_grey","href","repoLink","target","portfolio_item_img","portfolio_item_img_grey","process","imageName","title","displayTitle","projectTitle","projectTitleGrey","titleInnerMobile","titleInner","toUpperCase","slice","portfolio_item_hover","style","visibility","padding","overflow","fontSize","deployLink","rel","summary","buttonContainer","defaultProps","TechSelect","useState","showTooltip","setShowTooltip","onClick","toggleTech","name","techLogoContainers","selectedHighlight","caseSensitiveName","techLogos","imgGrey","image","suppressTooltip","tooltip","tooltipHidden","tooltipAfter","ButtonDrawer","containingDiv","hr","box","plusButton","toggle","transform","open","plusIcon","iBackground","height","children","Portfolio","selectedTechs","drawerOpen","tech","updatedTechList","includes","filter","item","hasSelectedTechs","stack","length","i","isSelectedTech","toggleDawer","Techs","map","key","noHover","paddingTop","paddingBottom","projects","project","techStack","ContactCard","linkToRepo","window","link","portfolio_item_link","Contact","NavBar","setOpen","setOverflow","useEffect","onscroll","e","setTimeout","addEventListener","onScroll","animateOpen","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","useMedia","query","matchMedia","matches","setMatches","media","listener","addListener","removeListener","App","cantHover","smBreakPoint","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.740d98db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio_item\":\"ProjectCard_portfolio_item__3Ri8p\",\"portfolio_item_grey\":\"ProjectCard_portfolio_item_grey__j9AMh\",\"portfolio_item_img\":\"ProjectCard_portfolio_item_img__2um3N\",\"portfolio_item_img_grey\":\"ProjectCard_portfolio_item_img_grey__2YvhX\",\"portfolio_item_hover\":\"ProjectCard_portfolio_item_hover__3hJKC\",\"buttonContainer\":\"ProjectCard_buttonContainer__3vrrl\",\"projectTitle\":\"ProjectCard_projectTitle__2veAz\",\"projectTitleGrey\":\"ProjectCard_projectTitleGrey__1xKh9\",\"titleInner\":\"ProjectCard_titleInner__13jew\",\"titleInnerMobile\":\"ProjectCard_titleInnerMobile__Z-qK5\",\"card_container\":\"ProjectCard_card_container__3eevM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techLogos\":\"TechSelect_techLogos__3pxF-\",\"imgGrey\":\"TechSelect_imgGrey__292VT\",\"selectedHighlight\":\"TechSelect_selectedHighlight__Ve0hi\",\"techLogoContainers\":\"TechSelect_techLogoContainers__L9e3Q\",\"tooltip\":\"TechSelect_tooltip__37l0H\",\"tooltipHidden\":\"TechSelect_tooltipHidden__37xXk\",\"tooltipAfter\":\"TechSelect_tooltipAfter__33KfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContentArea\":\"About_mainContentArea__1NjwG\",\"aboutTextContainer\":\"About_aboutTextContainer__1H34S\",\"aboutTextContainerMobile\":\"About_aboutTextContainerMobile__3PsMU\",\"introHeader\":\"About_introHeader__1cyH3\",\"introText\":\"About_introText__2_3rX\",\"profilePicContainer\":\"About_profilePicContainer__LrWr9\",\"profilePic\":\"About_profilePic__1nfEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containingDiv\":\"ButtonDrawer_containingDiv__3hS_z\",\"hr\":\"ButtonDrawer_hr__2CKPg\",\"plusButton\":\"ButtonDrawer_plusButton__37tZP\",\"plusIcon\":\"ButtonDrawer_plusIcon__1afU2\",\"iBackground\":\"ButtonDrawer_iBackground__1_b14\",\"buttonContainer\":\"ButtonDrawer_buttonContainer__M6z-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio_item\":\"ContactCard_portfolio_item__Foded\",\"portfolio_item_img\":\"ContactCard_portfolio_item_img__1w9Pj\",\"portfolio_item_link\":\"ContactCard_portfolio_item_link__2vqyO\",\"card_container\":\"ContactCard_card_container__2kxB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animateOpen\":\"NavBar_animateOpen__2ycu1\"};","import React from \"react\";\nimport styles from \"./styles/About.module.css\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className={` ${styles.mainContentArea} container`} id=\"aboutSection\">\n        <div className=\"row justify-content-around\">\n          {/* Column containing text (with media query) */}\n          <div\n            className={`${\n              this.props.mobileSize\n                ? styles.aboutTextContainerMobile\n                : styles.aboutTextContainer\n            } col-12 col-md-8`}\n          >\n            {/* Header and paragraph tag must be enclosed or flexbox will put them side-by-side when centering */}\n            <div>\n              <div className={styles.introHeader}>Hi, I'm Dan!</div>\n              <p className={styles.introText}>\n                Web Developer with a background in the arts and theatre\n                technology\n              </p>\n            </div>\n          </div>\n\n          {/* Column containing profile picture */}\n          <div className={` ${styles.profilePicContainer} col-12 col-md-4`}>\n            <figure>\n              <img\n                src={process.env.PUBLIC_URL + \"/misc_images/danielgoldphoto.jpg\"}\n                className={`${styles.profilePic} img-fluid my-3`}\n                alt=\"Daniel Gold\"\n              />\n            </figure>\n          </div>\n          {/* End image column*/}\n        </div>\n        {/* End row */}\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport styles from \"./styles/ProjectCard.module.css\";\n\nclass ProjectCard extends React.Component {\n  // Props:\n  // width?: \"single\" or \"double\" - Makes the component 4 or 8 columns in medium view - Default = single\n  // imageName: file name of image to be displayed\n  // title: Name of project/title\n  // repoLink?: link to project repo\n  // deployLink?: link to deployed project\n  // highlight: number - 0: tech missing; 1: no techs selected; 2: has all selected techs\n  // summary: Short summary of the project\n  // displayTitle?: boolean - set to true if the title needs to be displayed as text (not alreayd in the image) - default true\n  // mobileSize: boolean - true mean the media query for mobile size should be activated\n\n  static defaultProps = {\n    width: \"single\",\n    displayTitle: true\n  };\n\n  state = {\n    mouseOver: false // Tracks mouse over entire component. Used for zoom/scale effect.\n  };\n\n  mouseOnComponent = () => {\n    if (this.props.highlight) {\n      this.setState({ mouseOver: true });\n    }\n  };\n\n  mouseOffComponent = () => {\n    this.setState({ mouseOver: false });\n  };\n\n  render() {\n    return (\n      // Container with sizing info for overall component. Has a handler for mouseover attached.\n      <div\n        className={`col-${this.props.width === \"double\" ? \"12\" : \"6\"} col-md-${\n          this.props.width === \"double\" ? \"6\" : \"4\"\n        } p-1 p-md-2 ${\n          this.state.mouseOver\n            ? styles.card_container_hover\n            : styles.card_container\n        }`}\n        onMouseEnter={this.mouseOnComponent}\n        onMouseLeave={this.mouseOffComponent}\n      >\n        {/* Begin portfolio Item inner container. This container handles styling for highlighted/grey */}\n        <div\n          className={\n            this.props.highlight\n              ? styles.portfolio_item\n              : styles.portfolio_item_grey\n          }\n          href={this.props.repoLink}\n          target=\"_blank\"\n        >\n          <img\n            className={`img-fluid ${\n              this.props.highlight\n                ? styles.portfolio_item_img\n                : styles.portfolio_item_img_grey\n            }`}\n            src={`${process.env.PUBLIC_URL}/project_images/${this.props.imageName}`}\n            alt={this.props.title}\n          />\n          {/* Being project title container. Only appears if props.displayTitle is true */}\n          {this.props.displayTitle ? (\n            <div\n              className={\n                this.props.highlight\n                  ? styles.projectTitle\n                  : styles.projectTitleGrey\n              }\n            >\n              {/* Inner text container only exists to handle media query for font size */}\n              <div\n                className={\n                  this.props.mobileSize\n                    ? styles.titleInnerMobile\n                    : styles.titleInner\n                }\n              >\n                {this.props.title[0].toUpperCase() + this.props.title.slice(1)}\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {/* Begin mouse-over detail overlay for project card */}\n\n          {this.props.mobileSize ? (\n            // BEGIN MOBILE ONLY VERSION OF DETAIL OVERALY\n            <div\n              className={styles.portfolio_item_hover}\n              style={{\n                visibility: this.state.mouseOver ? \"visible\" : \"hidden\",\n                padding: \"1em\", overflow:\"scroll\"\n              }}\n            >\n              <h3 className=\"mb-sm-4 mb-xs-1\" style={{ fontSize: \"1em\" }}>\n                {this.props.title[0].toUpperCase() + this.props.title.slice(1)}\n              </h3>\n              {/* Button container for deploy and repo links (MOBILE)*/}\n              <div className={`row justify-content-around mb-xs-1 mb-sm-3`}>\n                {this.props.deployLink ? (\n                  <a\n                    className={` col-5 btn btn-light btn-sm`}\n                    href={this.props.deployLink}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Site\n                  </a>\n                ) : (\n                  \"\"\n                )}\n                {this.props.repoLink ? (\n                  <a\n                    className={` col-5 btn btn-light btn-sm`}\n                    href={this.props.repoLink}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Code\n                  </a>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              {/* End button container (MOBILE) */}\n              <p>{this.props.summary}</p>\n            </div>\n          ) : (\n            // END MOBILE ONLY VERSION OF OVERLAY\n            // ******************************************************************* \\\\\n            // BEGIN NON-MOBILE VERSION OF OVERLAY\n            <div\n              className={styles.portfolio_item_hover}\n              style={{\n                visibility: this.state.mouseOver ? \"visible\" : \"hidden\"\n              }}\n            >\n              <h3>\n                {this.props.title[0].toUpperCase() + this.props.title.slice(1)}\n              </h3>\n              <p>{this.props.summary}</p>\n              {/* Button container for deploy and repo links */}\n              <div className={`${styles.buttonContainer}`}>\n                {this.props.deployLink ? (\n                  <a\n                    className={`btn btn-light`}\n                    href={this.props.deployLink}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    View Website\n                  </a>\n                ) : (\n                  \"\"\n                )}\n                {this.props.repoLink ? (\n                  <a\n                    className={`btn btn-light`}\n                    href={this.props.repoLink}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Source Code\n                  </a>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              {/* End link button container */}\n            </div>\n            //* End mouseover detail overlay */\n          )}\n          {/* End mobile vs desktop conditional html */}\n        </div>\n        {/* End portfolio inner container */}\n      </div>\n    );\n  }\n}\n\nexport default ProjectCard;\n","import React, { useState } from \"react\";\nimport styles from \"./styles/TechSelect.module.css\";\n\nfunction TechSelect(props) {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const toolTipShow = () => {\n    setShowTooltip(true);\n  };\n  const toolTipHide = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    // Note: This has to be a div, not a button, since the default styling from pseudo classes for buttons, such as :active and :hover\n    // will interfer\n\n    // Begin main continer (basically a button)\n    <div\n      onMouseEnter={toolTipShow}\n      onMouseLeave={toolTipHide}\n      onClick={() => {\n        props.toggleTech(props.name);\n      }}\n      className={`${styles.techLogoContainers} col-2 col-md-1 btn btn-link \n      ${props.highlight === 2 ? styles.selectedHighlight : \"\"}\n      `}\n    >\n      {/* Begin image */}\n      <img\n        alt={props.caseSensitiveName}\n        className={`img-fluid ${styles.techLogos} ${\n          props.highlight ? \"\" : styles.imgGrey\n        } `}\n        src={`${process.env.PUBLIC_URL}/techs/${props.image}`}\n      />\n      {/* End image */}\n\n      {/* Begin tooltip */}\n      {/* Logic to stop render of anything to do with the tooltip on devices that don't have hover capability */}\n      {props.suppressTooltip ? (\n        \"\"\n      ) : (\n        <>\n          <div\n            className={`${styles.tooltip} ${\n              showTooltip ? \"\" : styles.tooltipHidden\n            }`}\n          >\n            {props.caseSensitiveName}\n          </div>\n          <div\n            className={`${styles.tooltipAfter} ${\n              showTooltip ? \"\" : styles.tooltipHidden\n            }`}\n          ></div>\n        </>\n      )}\n      {/* End tooltip */}\n    </div>\n    // End main container\n  );\n}\n\nexport default TechSelect;\n","import React from \"react\";\nimport styles from \"./styles/ButtonDrawer.module.css\";\n\nfunction ButtonDrawer(props) {\n  // Props:\n  // >>toggle: function - from parent that toggles drawer. No agruments.\n  // >>open: boolean - is drawer currently open.\n\n  return (\n    <>\n      <div className={styles.containingDiv}>\n        <hr className={styles.hr} />\n        <h6 className={styles.box}>Filter</h6>\n        <button\n          className={`${styles.plusButton} btn btn-link `}\n          onClick={props.toggle}\n          style={{\n            transform: `${\n              props.open ? \"rotate(45deg) translateX(1.9%)\" : \"rotate(0deg)\"\n            }`\n          }}\n        >\n          <i className={` ${styles.plusIcon} fas fa-plus-circle`}></i>\n          <div className={styles.iBackground}></div>\n        </button>\n      </div>\n      <div\n        className={`${styles.buttonContainer} container`}\n        style={{\n          height: `${props.open ? (props.mobileSize ? \"36vh\" : \"18vh\") : \"0\"}`\n        }}\n      >\n        {props.children}\n      </div>\n    </>\n  );\n}\n\nexport default ButtonDrawer;\n","import React from \"react\";\nimport ProjectCard from \"./ProjectCard\";\nimport projects from \"../assets/projects.json\";\nimport TechSelect from \"./TechSelect\";\nimport Techs from \"../assets/techs.json\";\nimport ButtonDrawer from \"./ButtonDrawer\";\n\nclass Portfolio extends React.Component {\n  state = {\n    selectedTechs: [],\n    drawerOpen: false\n  };\n\n  toggleTech = tech => {\n    // If tech is 'reset' blank out tech list\n    if (tech === \"reset\") {\n      this.setState({ selectedTechs: [] });\n      return;\n    }\n\n    // Adds or removes the tech (string) from the selectedTechs array in the state\n    let updatedTechList;\n    if (this.state.selectedTechs.includes(tech)) {\n      updatedTechList = this.state.selectedTechs.filter(item => item !== tech);\n    } else {\n      updatedTechList = [tech, ...this.state.selectedTechs];\n    }\n\n    this.setState({ selectedTechs: updatedTechList });\n  };\n\n  hasSelectedTechs = stack => {\n    // If no techs are selected, alwasy return truthy number 1\n    // If card has all selected techs, return truthy number 2\n    // If card is missing one or more selected techs, return falsy number 0\n    if (this.state.selectedTechs.length === 0) {\n      return 1;\n    }\n\n    for (let i = 0; i < this.state.selectedTechs.length; i++) {\n      if (!stack.includes(this.state.selectedTechs[i])) {\n        return 0;\n      }\n    }\n\n    return 2;\n  };\n\n  isSelectedTech = tech => {\n    if (this.state.selectedTechs.length === 0) {\n      return 1;\n    }\n\n    if (this.state.selectedTechs.includes(tech)) {\n      return 2;\n    }\n\n    return 0;\n  };\n\n  toggleDawer = () => {\n    // For tech drawer (ButtonDrawer) open/close\n    // If closing drawer, also reset techs\n    if (this.state.drawerOpen) {\n      this.toggleTech(\"reset\");\n    }\n    this.setState({ drawerOpen: !this.state.drawerOpen });\n  };\n\n  render() {\n    return (\n      <div className=\"container\" id=\"portfolioSection\">\n        <div className=\"row\">\n          <div className=\"col-12 portfolioHOne\">\n            <h1>Portfolio</h1>\n          </div>\n        </div>\n        <ButtonDrawer\n          open={this.state.drawerOpen}\n          toggle={this.toggleDawer}\n          mobileSize={this.props.mobileSize}\n        >\n          <div className=\"row justify-content-center\">\n            {Techs.map((tech, i) => {\n              return (\n                <TechSelect\n                  key={i}\n                  name={tech.name}\n                  image={tech.image}\n                  caseSensitiveName={tech.caseSensitiveName}\n                  toggleTech={this.toggleTech}\n                  highlight={this.isSelectedTech(tech.name)}\n                  suppressTooltip={this.props.noHover}\n                />\n              );\n            })}\n            <div\n              style={{ paddingTop: \"6vh\", paddingBottom: \"6vh\" }}\n              className=\"col-2 col-md-1 btn btn-link\"\n              onClick={() => this.toggleTech(\"reset\")}\n            >\n              Reset\n            </div>\n          </div>\n        </ButtonDrawer>\n        <div className=\"row\">\n          {projects.map((project, i) => {\n            return (\n              <ProjectCard\n                key={i}\n                width={project.width}\n                imageName={project.imageName}\n                title={project.title}\n                repoLink={project.repoLink}\n                deployLink={project.deployLink}\n                highlight={this.hasSelectedTechs(project.techStack)}\n                mobileSize={this.props.mobileSize}\n                summary={project.summary}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React from \"react\";\nimport styles from \"./styles/ContactCard.module.css\";\n\nclass ContactCard extends React.Component {\n  // Props:\n  // imageName: file name of image to be displayed\n  // title: Alt Text\n  // link: link to social site or file\n  //rounding: value for boarder radius\n\n  linkToRepo = () => {\n    window.open(this.props.repoLink);\n  };\n\n  render() {\n    return (\n      <div className={`col-6 col-md-4 p-1 p-md-2 ${styles.card_container}`}>\n        <div\n          className={styles.portfolio_item}\n          href={this.props.repoLink}\n          target=\"_blank\"\n        >\n          <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.portfolio_item_link}>\n            <img\n              className={`img-fluid ${styles.portfolio_item_img}`}\n              src={`${process.env.PUBLIC_URL}/social_images/${this.props.imageName}`}\n              alt={this.props.title}\n            />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactCard;\n","import React from \"react\";\nimport ContactCard from \"./ContactCard\";\n\nclass Contact extends React.Component {\n  render() {\n    return (\n      <div className=\"container\" id=\"contactSection\">\n        <div className=\"row\">\n          <div className=\"col-12 text-center\">\n            <h1 className=\"contactHOne\" >Contact</h1>\n          </div>\n        </div>\n        <div className=\"row \">\n          <ContactCard\n            imageName=\"linkedinlogo.png\"\n            title=\"Daniel Gold on LinkedIn\"\n            link=\"https://www.linkedin.com/in/danjasongold/\"\n          />\n          <ContactCard\n            imageName=\"githublogo.png\"\n            title=\"LandGod on GitHub\"\n            link=\"https://www.github.com/landgod\"\n          />\n          <ContactCard\n            imageName=\"gmail.svg\"\n            title=\"DanielJasonGold@gmail.com\"\n            link=\"mailto:DanielJasonGold@gmail.com\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./styles/NavBar.module.css\";\n\nfunction NavBar() {\n  const [open, setOpen] = useState(false);\n  const [overflow, setOverflow] = useState(false);\n\n  useEffect(() => {\n    // Trigger reveal navbar (via making height not 0) as soon as user scrolls page.\n    // Should never do anything after that inital scroll\n    let onScroll;\n\n    if (!open) {\n      onscroll = e => {\n        // Reveal navbar\n        setOpen(true);\n        // After reveal is finished, allow overflow permanently so that hamburger menue works\n        setTimeout(() => setOverflow(true), 2000);\n      };\n\n      window.addEventListener(\"scroll\", onscroll);\n    }\n    return () => {\n      if (onScroll) {\n        window.removeEventListener(\"scroll\", onscroll);\n      }\n    };\n  });\n\n  return (\n    <div\n      className={styles.animateOpen}\n      style={{\n        height: open ? \"54px\" : \"0px\",\n        overflow: overflow ? \"visible\" : \"hidden\"\n      }}\n    >\n      <nav\n        className=\"navbar navbar-expand-md navbar-light bg-light justify-content-between\"\n      >\n        <a className=\"navbar-brand\" href=\"#aboutSection\">\n          Dan Gold\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          className=\"collapse navbar-collapse justify-content-end\"\n          id=\"navbarNav\"\n        >\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#portfolioSection\">\n                Portfolio\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#contactSection\">\n                Contact\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                href={`${process.env.PUBLIC_URL}/DanielGold.pdf`}\n              >\n                Resume\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport About from \"./components/About\";\nimport Portfolio from \"./components/Portfolio\";\nimport Contact from \"./components/Contact\";\nimport NavBar from \"./components/NavBar\";\n\n// General prupose reuseable media queries\nfunction useMedia(query) {\n  // Set state hook to track query match status (boolean)\n  let [matches, setMatches] = useState(window.matchMedia(query).matches);\n\n  // Create effect hook to set value for state we just set up\n  useEffect(\n    () => {\n      let media = window.matchMedia(query);\n\n      // Update state only when a change is detected\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n\n      // Set up listener for changes in query match status\n      let listener = () => setMatches(media.matches);\n      media.addListener(listener);\n\n      // Return teardown function for listener\n      return () => media.removeListener(listener);\n    },\n\n    // Do not run this effect if the following value was not changed on update\n    [query, matches]\n  );\n\n  return matches;\n}\n\nfunction App() {\n  // Media queries\n  let cantHover = useMedia(\"(hover:none)\"); // Return true if device is touch-screen only (no mouse pointer)\n  let smBreakPoint = useMedia(\"(max-width: 767px)\"); // 540px is the sm breakpoint, but 768px is where things go off the rails for this app.\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <About mobileSize={smBreakPoint} />\n      <Portfolio noHover={cantHover} mobileSize={smBreakPoint} />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}