{"version":3,"sources":["components/About.js","contexts/MediaContext.js","components/ProjectCard.js","components/ToolTip.js","components/TechSelect.js","components/ButtonDrawer.js","components/Portfolio.js","components/ContactCard.js","components/Contact.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["About","className","id","src","alt","React","Component","useMedia","query","useState","window","matchMedia","matches","setMatches","useEffect","media","listener","addListener","removeListener","MediaContext","createContext","MediaContextProvider","props","cantHover","smBreakPoint","isIE","Provider","value","children","ProjectCard","mouseOver","setMouseOver","buttonsActive","setButtonsActive","blured","setBlured","thisCard","createRef","mouseOnComponent","highlight","mouseOffComponent","handleBlur","document","activeElement","Consumer","context","width","onMouseEnter","onMouseLeave","onFocus","onBlur","tabIndex","ref","aria-label","title","process","imageName","displayTitle","toUpperCase","slice","style","visibility","summary","deployLink","href","target","rel","repoLink","defaultProps","ToolTip","show","setShow","suppressToolTip","flex","display","subModal","onClick","Modal","onHide","aria-labelledby","dialogClassName","centered","Header","closeButton","Body","content","activationType","onKeyDown","event","key","blur","responsive","flip","offset","marginLeft","TechSelect","showTooltip","setShowTooltip","toolTipShow","toolTipHide","toggleTech","name","caseSensitiveName","image","ButtonDrawer","allowOverflow","setAllowOverflow","mediaState","useContext","open","toolTipTimer","setTimeout","clearTimeout","toggle","transform","height","overflow","Portfolio","state","selectedTechs","drawerOpen","tech","updatedTechList","includes","filter","item","setState","hasSelectedTechs","stack","length","i","isSelectedTech","toggleDawer","Techs","map","suppressTooltip","paddingTop","paddingBottom","projects","project","techStack","mobileSize","ContactCard","linkToRepo","this","customClickAction","link","Contact","showEmailPopup","togglePopup","copyEmail","copyText","getElementById","select","setSelectionRange","execCommand","emailTooltipInner","readOnly","Brand","Navbar","Toggle","Collapse","NavBar","setOpen","setOverflow","onscroll","e","keyCode","addEventListener","once","onScroll","expand","aria-controls","Nav","Link","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63dae8d4.chunk.js","sourcesContent":["import React from \"react\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"container\" id=\"aboutSection\"> {/* Id used for intra-page linking. Not used for css. Do not remove!*/}\n        <div className=\"row justify-content-around\">\n          {/* Column containing text (with media query) */}\n          <div className=\"about__text-container col-12 col-md-8\">\n            {/* Header and paragraph tag must be enclosed or flexbox will put them side-by-side when centering */}\n            <div>\n              <div className=\"about__header\">Hi, I'm Dan!</div>\n              <p className=\"about__text\">\n                Web Developer with a background in the arts and theatre\n                technology\n              </p>\n            </div>\n          </div>\n\n          {/* Column containing profile picture */}\n          <div className=\"about__img-container col-12 col-md-4\">\n            <figure>\n              <img\n                src={\n                  process.env.PUBLIC_URL + \"/misc_images/danielgoldphoto.jpg\"\n                }\n                className=\"about__img img-fluid my-3\"\n                alt=\"Daniel Gold\"\n              />\n            </figure>\n          </div>\n          {/* End image column*/}\n        </div>\n        {/* End row */}\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { useEffect, useState, createContext } from \"react\";\n\nfunction useMedia(query) {\n  // Set state hook to track query match status (boolean)\n  let [matches, setMatches] = useState(window.matchMedia(query).matches);\n\n  // Create effect hook to set value for state we just set up\n  useEffect(\n    () => {\n      let media = window.matchMedia(query);\n\n      // Update state only when a change is detected\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n\n      // Set up listener for changes in query match status\n      let listener = () => setMatches(media.matches);\n      media.addListener(listener);\n\n      // Return teardown function for listener\n      return () => media.removeListener(listener);\n    },\n\n    // Do not run this effect if the following value was not changed on update\n    [query, matches]\n  );\n\n  return matches;\n}\n\nexport const MediaContext = createContext();\n\nfunction MediaContextProvider(props) {\n  let cantHover = useMedia(\"(hover:none)\"); // Return true if device is touch-screen only (no mouse pointer)\n  let smBreakPoint = useMedia(\"(max-width: 767px)\"); // 540px is the sm breakpoint, but 768px is where things go off the rails for this app.\n  let isIE = useMedia(\"screen and (min-width:0\\0) and (min-resolution: +72dpi)\") // Checks if browser is IE 9 or above.\n\n  return (\n    <MediaContext.Provider\n      value={{ cantHover: cantHover, smBreakPoint: smBreakPoint, isIE:isIE }}\n    >\n      {props.children}\n    </MediaContext.Provider>\n  );\n}\n\nexport default MediaContextProvider;\n","import React, { useState, useEffect, createRef } from \"react\";\nimport { MediaContext } from \"../contexts/MediaContext\";\n\nfunction ProjectCard(props) {\n  // Props:\n  // width?: \"single\" or \"double\" - Makes the component 4 or 8 columns in medium view - Default = single\n  // imageName: file name of image to be displayed\n  // title: Name of project/title\n  // repoLink?: link to project repo\n  // deployLink?: link to deployed project\n  // highlight: number - 0: tech missing; 1: no techs selected; 2: has all selected techs\n  // summary: Short summary of the project\n  // displayTitle?: boolean - set to true if the title needs to be displayed as text (not alreayd in the image) - default true\n\n  // CONTEXT - This component consumes the MediaContext provider in order to be mobile responsive using the smBreakPoint property\n\n  const [mouseOver, setMouseOver] = useState(false); // Tracks mouse over entire component. Used for zoom/scale effect.\n  const [buttonsActive, setButtonsActive] = useState(false);\n  const [blured, setBlured] = useState(false); // Tracks whether or not any blur event has just occured so that we can trigger our useEffect for blur handling\n\n  const thisCard = createRef();\n\n  const mouseOnComponent = () => {\n    // Update state to reflect mouseover (unless the card is greyed out by filter)\n    if (props.highlight) {\n      setMouseOver(true);\n    }\n  };\n\n  const mouseOffComponent = () => {\n    setMouseOver(false);\n  };\n\n  const handleBlur = () => {\n    setBlured(true);\n  };\n\n  // Translate focus out to do the same thing as mouseout while avoiding loss of focus on child focus\n  useEffect(() => {\n    if (blured) {\n      // Checks if current element has focus (child with focus counts)\n      if (!(document.activeElement === thisCard)) {\n        setMouseOver(false);\n      }\n      return () => {\n        setBlured(false);\n      };\n    }\n\n    return () => {\n      if (blured) {\n        setBlured(false);\n      }\n    };\n  }, [blured, thisCard]);\n\n  // Disable buttons when overlay is not visible to prevent being able to click them without even seeing them on mobile\n  useEffect(() => {\n    if (mouseOver && !buttonsActive) {\n      setButtonsActive(true);\n    } else if (!mouseOver && buttonsActive) {\n      setButtonsActive(false);\n    }\n  }, [mouseOver, buttonsActive]);\n\n  return (\n    <MediaContext.Consumer>\n      {(context) => {\n        const { smBreakPoint } = context;\n        return (\n          // Container with sizing info for overall component. Has a handler for mouseover attached.\n          <div\n            className={`col-${props.width === \"double\" ? \"12\" : \"6\"} col-md-${\n              props.width === \"double\" ? \"6\" : \"4\"\n            } p-1 p-md-2 project__container`}\n            onMouseEnter={mouseOnComponent}\n            onMouseLeave={mouseOffComponent}\n            onFocus={mouseOnComponent}\n            onBlur={handleBlur}\n            tabIndex={smBreakPoint ? \"\" : \"0\"}\n            ref={thisCard}\n            aria-label={`Project: ${props.title}`}\n          >\n            {/* Begin portfolio Item inner container. This container handles styling for highlighted/grey */}\n            <div className={props.highlight ? \"project\" : \"project--grey\"}>\n              <img\n                className={`img-fluid ${\n                  props.highlight ? \"project__img\" : \"project__img--grey\"\n                }`}\n                src={`${process.env.PUBLIC_URL}/project_images/${props.imageName}`}\n                alt={props.title}\n              />\n              {/* Being project title container. Only appears if props.displayTitle is true */}\n              {props.displayTitle ? (\n                <div\n                  className={\n                    props.highlight ? \"project__title\" : \"project__title--grey\"\n                  }\n                >\n                  {/* Inner text container only exists to handle media query for font size */}\n                  <div className=\"project__title-inner\">\n                    {/* Capitalized Title */}\n                    {props.title[0].toUpperCase() + props.title.slice(1)}\n                  </div>\n                </div>\n              ) : null}\n              {/* Begin mouse-over detail overlay for project card */}\n              <div\n                className=\"project__overlay\"\n                style={ smBreakPoint ? {visibility: \"hidden\"} : {visibility: mouseOver ? \"visible\" : \"hidden\"}}\n              >\n                { smBreakPoint ? null : <h3>{props.title[0].toUpperCase() + props.title.slice(1)}</h3>}\n                { smBreakPoint ? null : <p>{props.summary}</p>}\n                {/* Button container for deploy and repo links */}\n                {/* Some notes on the button container the hack that was apparently neccessary to make it work properly on mobile:\n                  Pointer events are explicitly disabled and re-enabled on both the parent element of the anchor tags, and the anchor tags themesleved.\n                  Why? Two reasons:\n                  1. If you only do it on the parent, then they remain disabled when needed, but have to be clicked twice in a row after being enabled to actually work\n                  2. If you only do it on the anchor tags then they just never get disabled.\n\n                  It took me a long time and trying a ton of crap, that in theory should have worked, before I landed on this. My current theory is that the asynchronous \n                  manner in which React handles events, and/or the way it causes certain things to bubble that otherwise wouldn't, is somehow causing this behavior. \n\n                  Either that or it's just a glitch in the chrome mobile mocker. If so... ugh. \n                  \n                  For now though, I am satisfied that it works. Mess with the below code at your own peril.\n\n                  Additional fun fact: Added comments to the line that the style properties are on breaks the functionality. Somehow.\n\n                 */}\n                <div className=\"project__button-container\">\n                  {props.deployLink ? (\n                    <a\n                      className=\"btn btn-light project__button\"\n                      href={props.deployLink}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      aria-label=\"Link to website\"\n                    >\n                      { smBreakPoint? \"Site\" : \"View Website\"}\n                    </a>\n                  ) : null}\n                  {props.repoLink ? (\n                    <a\n                      className=\"btn btn-light project__button\"\n                      href={props.repoLink}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      aria-label=\"Link to source code on github\"\n                    >\n                      { smBreakPoint ? \"Code\" : \"Source Code\"}\n                    </a>\n                  ) : null}\n                </div>\n                {/* End link button container */}\n              </div>\n              {/* End mouseover detail overlay */}\n            </div>\n            {/* End portfolio inner container */}\n          </div>\n        );\n      }}\n    </MediaContext.Consumer>\n  );\n}\n\nProjectCard.defaultProps = {\n  width: \"single\",\n  displayTitle: true,\n};\n\nexport default ProjectCard;\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nfunction ToolTip(props) {\n  /* \n    PROPS:\n        -suppressToolTip: boolean = if true, tooltip is never shown. If false, default behavior.\n        -content: any html = content for the tooltip itself. IE: was is displayed in the tooltip.\n        -showTooltip: boolean = True shows tooltip, false hides tooltip\n        -flex: boolean = True sets container as a flexbox (useful for vertically centering children)\n        -flip: boolean = If true, display tooltip above rather than below child component\n        -activationType: 'hover' | 'click' = conditions under which tooltip should appear\n        -responsive: boolean = false uses default sizing via pixels, true fits tooltip to content\n        -offset: number = use with responsive to center element since value will need to depend on tooltip size\n        -subModal: boolean = Set to true to activate component as modal instead of tooltip (ie: substitute modal for tooltip).\n    */\n\n  // Only used for modal mode, but can't be called conditionally, so will always be present.\n  const [show, setShow] = useState(false);\n\n  const handleEscapePress = (event) => {\n    if (event.key === \"Escape\") {\n      event.target.blur();\n    }\n  };\n\n  // If on mobile, use modal instead of tooltip\n  if (props.suppressToolTip) {\n    return (\n      <div style={props.flex ? { display: \"flex\" } : {}}>{props.children}</div>\n    );\n  }\n\n  if (props.subModal) {\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n      <>\n        <div onClick={handleShow}>{props.children}</div>\n        <Modal\n          show={show}\n          onHide={handleClose}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          dialogClassName=\"tooltip__modal\"\n          centered\n        >\n          <Modal.Header closeButton></Modal.Header>\n          <Modal.Body>{props.content}</Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n\n  return (\n    <div\n      className={`tooltip ${\n        props.activationType === \"hover\"\n          ? \"tooltip--hoverable\"\n          : props.activationType === \"click\"\n          ? \"tooltip--clickable\"\n          : \"\"\n      } ${props.flex ? \"display-flex\" : \"\"}`}\n      onKeyDown={handleEscapePress}\n    >\n      {props.children}\n      <span\n        className={`\n        tooltip__text\n        ${props.responsive ? \"tooltip__text--responsive\" : \"\"}\n        ${props.flip ? \"tooltip__text--top\" : \"tooltip__text--bottom\"}\n        `}\n        style={props.offset ? { marginLeft: props.offset } : {}}\n      >\n        {props.content}\n      </span>\n    </div>\n  );\n}\n\nexport default ToolTip;\n","import React, { useState } from \"react\";\nimport ToolTip from \"./ToolTip\";\nimport { MediaContext } from \"../contexts/MediaContext\";\n\nfunction TechSelect(props) {\n  /*\n  PROPS:\n    -name: string = short lowercase name of this technology\n    -caseSensitiveName: string = How the name of the technology should appear to the user\n    -highlight: 0 | 1 | 2 = For zero, image is made greyscale. 1 is normal appearance. 2 is normal with an underline (bottom border)\n    -image: string = file name with extention of image to be used (path to image - filename is already hardcoded)\n    -toggleTech: function = Function which shows or hides the tooltip when called.\n    -suppressTooltip: boolean = When true, tooltip will never appear\n  */\n\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const toolTipShow = () => {\n    setShowTooltip(true);\n  };\n  const toolTipHide = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    // Note: This has to be a div, not a button, since the default styling from pseudo classes for buttons, such as :active and :hover\n    // will interfer\n\n    <MediaContext.Consumer>\n      {(context) => {\n        const { cantHover } = context;\n        return (\n          // Begin main continer (basically a button)\n          <div\n            onMouseEnter={toolTipShow}\n            onMouseLeave={toolTipHide}\n            onClick={() => {\n              props.toggleTech(props.name);\n            }}\n            className={`tech col-2 col-md-1\n              ${props.highlight === 2 ? \"tech--highlight\" : \"\"}\n            `}\n          >\n            <ToolTip\n              suppressToolTip={cantHover}\n              content={props.caseSensitiveName}\n              showTooltip={showTooltip}\n              activationType=\"hover\"\n            >\n              {/* Begin image */}\n              <div className=\"tech__centerer\">\n                <img\n                  alt={props.caseSensitiveName}\n                  className={` img-fluid ${\n                    props.highlight ? \"\" : \"tech__image--grey\"\n                  } `}\n                  src={`${process.env.PUBLIC_URL}/techs/${props.image}`}\n                />\n              </div>\n              {/* End image */}\n            </ToolTip>\n          </div>\n          // End main container\n        );\n      }}\n    </MediaContext.Consumer>\n  );\n}\n\nexport default TechSelect;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { MediaContext } from \"../contexts/MediaContext\";\n\nfunction ButtonDrawer(props) {\n  // Props:\n  // >>toggle: function - from parent that toggles drawer. No agruments.\n  // >>open: boolean - is drawer currently open.\n\n  const [allowOverflow, setAllowOverflow] = useState(false);\n  const mediaState = useContext(MediaContext);\n\n  // In order to achieve a slide-out animated effect, overflow must be hidden while opening and closing (and while closed)\n  // however, overflow must be allowed while fully open to allow tooltips to be displayed properly.\n  // This effect, together with the allowOverFlow state allow overflow to be shown only when the drawer is fully open.\n\n  useEffect(() => {\n    // If component gets set to open after having been closed, allow overflow after animation finished (2 seconds)\n    if (props.open) {\n      const allowOverflowTrue = () => {\n        setAllowOverflow(true);\n      };\n      const toolTipTimer = setTimeout(allowOverflowTrue, 2000);\n\n      return () => {\n        clearTimeout(toolTipTimer);\n      };\n    }\n    //  If component gets closed after being open, imediately set overflow to false.\n    else {\n      setAllowOverflow(false);\n    }\n  }, [props.open, allowOverflow]);\n\n  return (\n    <>\n      <div className=\"drawer__outer\">\n        <hr className=\"drawer__hr\" />\n        <h6>Filter</h6>\n        <button className=\"plus__button btn btn-link\" onClick={props.toggle}>\n          <i\n            className=\"plus__icon fas fa-plus-circle\"\n            style={{\n              transform: `${\n                props.open ? \"rotate(45deg) translateX(1.9%)\" : \"rotate(0deg)\"\n              }`,\n            }}\n          ></i>\n          <div className=\"plus__background\"></div>\n        </button>\n      </div>\n      <div\n        className=\"drawer__inner container\"\n        style={{\n          height: `${\n            props.open ? (mediaState.smBreakPoint ? \"36vh\" : \"18vh\") : \"0\"\n          }`,\n          overflow: `${allowOverflow && props.open ? \"visible\" : \"hidden\"}`,\n        }}\n      >\n        {props.children}\n      </div>\n    </>\n  );\n}\n\nexport default ButtonDrawer;\n","import React from \"react\";\nimport ProjectCard from \"./ProjectCard\";\nimport projects from \"../assets/projects.json\";\nimport TechSelect from \"./TechSelect\";\nimport Techs from \"../assets/techs.json\";\nimport ButtonDrawer from \"./ButtonDrawer\";\nimport { MediaContext } from \"../contexts/MediaContext\";\n\nclass Portfolio extends React.Component {\n  state = {\n    selectedTechs: [],\n    drawerOpen: false,\n  };\n\n  toggleTech = (tech) => {\n    // If tech is 'reset' blank out tech list\n    if (tech === \"reset\") {\n      this.setState({ selectedTechs: [] });\n      return;\n    }\n\n    // Adds or removes the tech (string) from the selectedTechs array in the state\n    let updatedTechList;\n    if (this.state.selectedTechs.includes(tech)) {\n      updatedTechList = this.state.selectedTechs.filter(\n        (item) => item !== tech\n      );\n    } else {\n      updatedTechList = [tech, ...this.state.selectedTechs];\n    }\n\n    this.setState({ selectedTechs: updatedTechList });\n  };\n\n  hasSelectedTechs = (stack) => {\n    // If no techs are selected, alwasy return truthy number 1\n    // If card has all selected techs, return truthy number 2\n    // If card is missing one or more selected techs, return falsy number 0\n    if (this.state.selectedTechs.length === 0) {\n      return 1;\n    }\n\n    for (let i = 0; i < this.state.selectedTechs.length; i++) {\n      if (!stack.includes(this.state.selectedTechs[i])) {\n        return 0;\n      }\n    }\n\n    return 2;\n  };\n\n  isSelectedTech = (tech) => {\n    if (this.state.selectedTechs.length === 0) {\n      return 1;\n    }\n\n    if (this.state.selectedTechs.includes(tech)) {\n      return 2;\n    }\n\n    return 0;\n  };\n\n  toggleDawer = () => {\n    // For tech drawer (ButtonDrawer) open/close\n    // If closing drawer, also reset techs\n    if (this.state.drawerOpen) {\n      this.toggleTech(\"reset\");\n    }\n    this.setState({ drawerOpen: !this.state.drawerOpen });\n  };\n\n  render() {\n    return (\n      <MediaContext.Consumer>\n        {(context) => {\n          const { cantHover, smBreakPoint } = context;\n          return (\n            <div className=\"container\" id=\"portfolioSection\"> {/* Id used for linking to section, not for css. DO NOT DELETE. */}\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <h1>Portfolio</h1>\n                </div>\n              </div>\n              <ButtonDrawer\n                open={this.state.drawerOpen}\n                toggle={this.toggleDawer}\n              >\n                <div className=\"row justify-content-center\">\n                  {Techs.map((tech, i) => {\n                    return (\n                      <TechSelect\n                        key={i}\n                        name={tech.name}\n                        image={tech.image}\n                        caseSensitiveName={tech.caseSensitiveName}\n                        toggleTech={this.toggleTech}\n                        highlight={this.isSelectedTech(tech.name)}\n                        suppressTooltip={cantHover}\n                      />\n                    );\n                  })}\n                  <div\n                    style={{ paddingTop: \"6vh\", paddingBottom: \"6vh\" }}\n                    className=\"col-2 col-md-1 btn btn-link\"\n                    onClick={() => this.toggleTech(\"reset\")}\n                  >\n                    Reset\n                  </div>\n                </div>\n              </ButtonDrawer>\n              <div className=\"row\">\n                {projects.map((project, i) => {\n                  return (\n                    <ProjectCard\n                      key={i}\n                      width={project.width}\n                      imageName={project.imageName}\n                      title={project.title}\n                      repoLink={project.repoLink}\n                      deployLink={project.deployLink}\n                      highlight={this.hasSelectedTechs(project.techStack)}\n                      mobileSize={smBreakPoint}\n                      summary={project.summary}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          );\n        }}\n      </MediaContext.Consumer>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React from \"react\";\n\nclass ContactCard extends React.Component {\n  // Props:\n  // imageName: file name of image to be displayed\n  // title: Alt Text\n  // link: link to social site or file\n  // customClickAction: Icon is rendered as a button instead and uses the supplied function as its onclick\n\n  linkToRepo = () => {\n    window.open(this.props.repoLink);\n  };\n\n  render() {\n    return (\n      <div className=\"contact__container\">\n        <div\n          className=\"contact__card\"\n          href={this.props.repoLink}\n          target=\"_blank\"\n        >\n          {this.props.customClickAction ? (\n            <button\n              onClick={this.props.customClickAction}\n              className=\"contact__link btn btn-link\"\n            >\n              <img\n                className=\"contact__image img-fluid\"\n                src={`${process.env.PUBLIC_URL}/social_images/${this.props.imageName}`}\n                alt={this.props.title}\n              />\n            </button>\n          ) : (\n            <a\n              href={this.props.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"contact__link\"\n            >\n              <img\n                className=\"contact__image img-fluid\"\n                src={`${process.env.PUBLIC_URL}/social_images/${this.props.imageName}`}\n                alt={this.props.title}\n              />\n            </a>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactCard;\n","import React from \"react\";\nimport ToolTip from \"./ToolTip\";\nimport ContactCard from \"./ContactCard\";\nimport { MediaContext } from \"../contexts/MediaContext\";\n\nclass Contact extends React.Component {\n  state = { showEmailPopup: false };\n\n  togglePopup = () => {\n    this.setState({ showEmailPopup: !this.state.showEmailPopup });\n  };\n\n  copyEmail = () => {\n    // Get the text field\n    const copyText = document.getElementById(\"contact__email\");\n\n    // Select the text field\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n    // Copy the text inside the text field\n    document.execCommand(\"copy\");\n  };\n\n  emailTooltipInner = () => {\n    return (\n      <div className=\"container p-2\" tabIndex=\"-1\">\n        <div className=\"row\">\n          <textarea\n            id=\"contact__email\"\n            className=\"col-12 text-center\"\n            value=\"DanielJasonGold@gmail.com\"\n            readOnly\n          />\n        </div>\n        <div className=\"row\">\n          <button\n            className=\"btn btn-sm btn-light mx-auto\"\n            onClick={this.copyEmail}\n          >\n            Copy\n          </button>\n          <a\n            className=\"btn btn-sm btn-light mx-auto\"\n            href=\"mailto:DanielJasonGold@gmail.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Compose\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <MediaContext.Consumer>\n        {(context) => {\n          const { smBreakPoint, isIE } = context;\n          return (\n            <div className=\"container\" id=\"contactSection\">\n              <div className=\"row\">\n                <div className=\"col-12 mt-5\">\n                  <h1>Contact</h1>\n                  <hr className=\"contact__hr\" />\n                </div>\n              </div>\n              <div className=\"row \">\n                <div className=\"col-6 col-md-3 p-1 p-md-2\">\n                  <ContactCard\n                    imageName=\"twitter.svg\"\n                    title=\"Daniel Gold on Twitter\"\n                    link=\"https://twitter.com/DanGoldLandGod\"\n                  />\n                </div>\n                <div className=\"col-6 col-md-3 p-1 p-md-2\">\n                  <ContactCard\n                    imageName=\"linkedin.svg\"\n                    title=\"Daniel Gold on LinkedIn\"\n                    link=\"https://www.linkedin.com/in/danjasongold/\"\n                  />\n                </div>\n                <div className=\"col-6 col-md-3 p-1 p-md-2\">\n                  <ContactCard\n                    imageName=\"github.svg\"\n                    title=\"LandGod on GitHub\"\n                    link=\"https://www.github.com/landgod\"\n                  />\n                </div>\n                <div className=\"col-6 col-md-3 p-1 p-md-2\">\n                  <ToolTip\n                    content={this.emailTooltipInner()}\n                    showTooltip={this.state.showEmailPopup}\n                    flip={true}\n                    activationType=\"click\"\n                    responsive=\"true\"\n                    offset=\"-115px\"\n                    subModal={smBreakPoint || isIE ? true : false}\n                  >\n                    <ContactCard\n                      imageName=\"email.svg\"\n                      title=\"DanielJasonGold@gmail.com\"\n                      customClickAction={this.togglePopup}\n                    />\n                  </ToolTip>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </MediaContext.Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst { Brand, Toggle, Collapse } = Navbar;\n\nfunction NavBar() {\n  const [open, setOpen] = useState(false);\n  const [overflow, setOverflow] = useState(false);\n\n  useEffect(() => {\n    // Trigger reveal navbar (via making height not 0) as soon as user scrolls page.\n    // Should never do anything after that inital scroll\n    let onScroll;\n\n    if (!open) {\n      onscroll = (e) => {\n        // Check for [tab] press\n        if (e.keyCode) {\n          if (e.keyCode !== 9) {\n            return;\n          }\n        }\n        // Reveal navbar\n        setOpen(true);\n        // After reveal is finished, allow overflow permanently so that hamburger menue works\n        setTimeout(() => setOverflow(true), 2000);\n      };\n\n      window.addEventListener(\"scroll\", onscroll, { once: \"true\" });\n      window.addEventListener(\"keyup\", onscroll, { once: \"true\" });\n    }\n    return () => {\n      if (onScroll) {\n        window.removeEventListener(\"scroll\", onscroll);\n        window.removeEventListener(\"keyup\", onscroll);\n      }\n    };\n  });\n\n  return (\n    <div\n      className=\"nav__opener\"\n      style={{\n        height: open ? \"54px\" : \"0px\",\n        overflow: overflow ? \"visible\" : \"hidden\",\n      }}\n    >\n      <Navbar className=\"bg-light\" expand=\"md\">\n        <Brand href=\"#aboutSection\">Dan Gold</Brand>\n        <Toggle\n          aria-controls=\"responsive-navbar-nav\"\n          aria-label=\"Toggle navigation\"\n        />\n        <Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n          <Nav>\n            <Nav.Link href=\"#portfolioSection\">Portfolio</Nav.Link>\n            <Nav.Link href=\"#contactSection\">Contact</Nav.Link>\n            <Nav.Link\n              href={`${process.env.PUBLIC_URL}/DanielGold.pdf`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Resume\n            </Nav.Link>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport About from \"./components/About\";\nimport Portfolio from \"./components/Portfolio\";\nimport Contact from \"./components/Contact\";\nimport NavBar from \"./components/NavBar\";\nimport MediaContextProvider from \"./contexts/MediaContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <MediaContextProvider>\n        <About/>\n        <Portfolio/>\n        <Contact />\n      </MediaContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}