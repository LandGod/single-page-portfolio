{"version":3,"sources":["components/styles/IconBar.module.css","components/styles/TextBaloon.module.css","logo.svg","components/IconBar.js","components/TextBaloon.js","components/About.js","components/Portfolio.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IconBar","className","style","styles","iconBarIcons","iconSpan","class","iconBarBar","React","Component","TextBaloon","baloonMain","About","src","process","Portfolio","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,aAAe,8BAA8B,SAAW,4B,kBCAnHD,EAAOC,QAAU,CAAC,WAAa,iC,uECD/BD,EAAOC,QAAU,IAA0B,kC,iKC8B5BC,E,iLAzBX,OACE,yBAAKC,UAAU,YAAYC,MAAOC,KAChC,yBAAKF,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,OACb,yBAAKA,UAAWE,IAAOC,cACrB,0BAAMH,UAAS,UAAKE,IAAOE,SAAZ,WACb,uBAAGC,MAAM,mBAEX,0BAAML,UAAS,UAAKE,IAAOE,SAAZ,WACb,uBAAGC,MAAM,uBAEX,0BAAML,UAAS,UAAKE,IAAOE,SAAZ,WACb,uBAAGC,MAAM,oBAGb,yBAAKL,UAAS,UAAKE,IAAOI,WAAZ,qB,GAlBNC,IAAMC,W,gBC8BbC,E,iLA5BX,OACE,yBAAKT,UAAS,UAAKE,IAAOQ,WAAZ,eACZ,yBAAKV,UAAU,YACb,yBAAKA,UAAU,oBACb,uCACA,kcASA,sCACA,4HAIA,iDACA,2D,GAtBaO,IAAMC,WC4BhBG,E,iLAzBX,OACE,yBAAKX,UAAU,aACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,mCACb,4BAAQA,UAAU,cAChB,yBACEY,IAAKC,6CACLb,UAAU,oBAGd,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,+BACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,oBACb,kBAAC,EAAD,e,GAjBIO,IAAMC,WCMXM,E,iLANX,OAAO,qE,GAFaP,IAAMC,WCQfO,E,iLANX,OAAO,mE,GAFWR,IAAMC,WCebQ,MAVf,WACE,OACE,yBAAKhB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAciB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5efc6338.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconBarBar\":\"IconBar_iconBarBar__3zohN\",\"iconBarIcons\":\"IconBar_iconBarIcons__chgAh\",\"iconSpan\":\"IconBar_iconSpan__2Wd2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baloonMain\":\"TextBaloon_baloonMain__SwK0N\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport styles from \"./styles/IconBar.module.css\";\n\nclass IconBar extends React.Component {\n  render() {\n    return (\n      <div className=\"container\" style={styles}>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"row\">\n              <div className={styles.iconBarIcons}>\n                <span className={`${styles.iconSpan} col-2`}>\n                  <i class=\"fas fa-laptop\"></i>\n                </span>\n                <span className={`${styles.iconSpan} col-2`}>\n                  <i class=\"fas fa-tablet-alt\"></i>\n                </span>\n                <span className={`${styles.iconSpan} col-2`}>\n                  <i class=\"fas fa-mobile\"></i>\n                </span>\n              </div>\n              <div className={`${styles.iconBarBar} col-12`}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconBar;\n","import React from \"react\";\nimport styles from \"./styles/TextBaloon.module.css\";\n\nclass TextBaloon extends React.Component {\n  render() {\n    return (\n      <div className={`${styles.baloonMain} container`}>\n        <div className=\"row pt-3\">\n          <div className=\"col-12 text-left\">\n            <h5>Summary</h5>\n            <p>\n              Web Developer with a background in the arts and theatre\n              technology. Educated at the University of Washington Coding\n              Bootcamp with skills in HTML, CSS, JavaScript, and Python.\n              Detail-oriented problem solver with a passion for iterating new\n              features to create better user experiences. Strengths in\n              creativity, teamwork, and quick learning. Equally at home with\n              front-end and back-end projects, and works well with others.\n            </p>\n            <h5>Skills</h5>\n            <p>\n              React, JavaScript, Node.js, Python, HTML, CSS, Express,\n              Handlebars, mySQL, MongoDB, REST APIs\n            </p>\n            <h5>Additional Skills</h5>\n            <p>Management, MS Office</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextBaloon;\n","import React from \"react\";\nimport IconBar from \"./IconBar\";\nimport TextBaloon from \"./TextBaloon\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-end\">\n          <div className=\"col-12 col-md-4 mainContentArea\">\n            <figure className=\"profilePic\">\n              <img\n                src={process.env.PUBLIC_URL + \"/danielgoldphoto.jpg\"}\n                className=\"img-fluid my-3\"\n              />\n            </figure>\n            <div className=\"overlapContainer\">\n              <div className=\"textBaloonComponent mt-md-5\">\n                <TextBaloon />\n              </div>\n              <div className=\"iconBarComponent\">\n                <IconBar />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\n\nclass Portfolio extends React.Component {\n  render() {\n    return <div>\n        This is an 'Portfolio' component\n    </div>;\n  }\n}\n\nexport default Portfolio;","import React from 'react';\n\nclass Contact extends React.Component {\n  render() {\n    return <div>\n        This is an 'Contact' component\n    </div>;\n  }\n}\n\nexport default Contact;","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Portfolio from \"./components/Portfolio\";\nimport Contact from \"./components/Contact\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <About />\n      <Portfolio />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}